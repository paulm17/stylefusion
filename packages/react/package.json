{
  "name": "@stylefusion/react",
  "version": "0.0.24-3",
  "main": "build/index.js",
  "module": "build/index.mjs",
  "types": "build/index.d.ts",
  "author": "Paul Moss",
  "description": "A zero-runtime CSS-in-JS library.",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mui/pigment-css.git",
    "directory": "packages/react"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mui/pigment-css/issues"
  },
  "homepage": "https://github.com/mui/pigment-css/tree/master/README.md",
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/mui-org"
  },
  "scripts": {
    "clean": "rimraf build types processors utils",
    "watch": "tsup --watch --clean false",
    "copy-license": "node ../../scripts/pigment-license.mjs",
    "build": "tsup",
    "test": "cd ../../ && cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=text mocha 'packages/react/**/*.test.{js,ts,tsx}'",
    "test:update": "cd ../../ && cross-env NODE_ENV=test UPDATE_FIXTURES=true mocha 'packages/react/**/*.test.{js,ts,tsx}'",
    "test:ci": "cd ../../ && cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=lcov --report-dir=./coverage/react mocha 'packages/react/**/*.test.{js,ts,tsx}'",
    "typescript": "tsc --noEmit -p ."
  },
  "dependencies": {
    "@babel/core": "^7.24.4",
    "@babel/helper-module-imports": "^7.24.3",
    "@babel/helper-plugin-utils": "^7.24.0",
    "@babel/parser": "^7.24.4",
    "@babel/types": "^7.24.0",
    "@emotion/css": "^11.11.2",
    "@emotion/is-prop-valid": "^1.2.2",
    "@emotion/react": "^11.11.4",
    "@emotion/serialize": "^1.1.4",
    "@emotion/styled": "^11.11.5",
    "@mui/system": "^6.0.0-alpha.6",
    "@mui/utils": "^6.0.0-alpha.6",
    "@wyw-in-js/processor-utils": "^0.5.4",
    "@wyw-in-js/shared": "^0.5.4",
    "@wyw-in-js/transform": "^0.5.4",
    "clsx": "^2.1.0",
    "cssesc": "^3.0.0",
    "csstype": "^3.1.3",
    "lodash": "^4.17.21",
    "stylis": "^4.3.1",
    "stylis-plugin-rtl": "^2.1.1"
  },
  "devDependencies": {
    "@babel/plugin-syntax-jsx": "^7.24.1",
    "@mui/types": "7.2.14",
    "@types/babel__core": "^7.20.5",
    "@types/babel__helper-module-imports": "^7.18.3",
    "@types/babel__helper-plugin-utils": "^7.10.3",
    "@types/chai": "^4.3.14",
    "@types/cssesc": "^3.0.2",
    "@types/lodash": "^4.17.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.31",
    "@types/prop-types": "^15.7.12",
    "@types/react": "^18.3.3",
    "@types/stylis": "^4.2.5",
    "chai": "^4.4.1",
    "prettier": "^3.2.5",
    "prop-types": "^15.8.1",
    "react": "^18.2.0"
  },
  "peerDependencies": {
    "react": "^17.0.0 || ^18.0.0"
  },
  "sideEffects": false,
  "publishConfig": {
    "access": "public"
  },
  "wyw-in-js": {
    "tags": {
      "styled": "./exports/styled.js",
      "sx": "./exports/sx.js",
      "keyframes": "./exports/keyframes.js",
      "generateAtomics": "./exports/generateAtomics.js",
      "css": "./exports/css.js",
      "createUseThemeProps": "./exports/createUseThemeProps.js",
      "internal_createExtendSxProp": "./exports/internal_createExtendSxProp.js",
      "globalCss": "./exports/globalCss.js",
      "useTheme": "./exports/useTheme.js"
    }
  },
  "files": [
    "build",
    "exports",
    "processors",
    "theme",
    "utils",
    "internal",
    "package.json",
    "styles.css",
    "LICENSE"
  ],
  "exports": {
    ".": {
      "types": "./build/index.d.ts",
      "import": {
        "types": "./build/index.d.mts",
        "default": "./build/index.mjs"
      },
      "require": "./build/index.js",
      "default": "./theme/index.js"
    },
    "./package.json": "./package.json",
    "./theme": {
      "types": "./theme/index.d.ts",
      "import": "./theme/index.mjs",
      "require": "./theme/index.js",
      "default": "./theme/index.js"
    },
    "./styles.css": {
      "require": "./build/index.js",
      "default": "./styles.css"
    },
    "./utils": {
      "types": "./utils/index.d.ts",
      "import": {
        "types": "./utils/index.d.mts",
        "default": "./utils/index.mjs"
      },
      "require": "./utils/index.js",
      "default": "./utils/index.js"
    },
    "./internal": {
      "types": "./internal/index.d.ts",
      "import": {
        "types": "./internal/index.d.mts",
        "default": "./internal/index.mjs"
      },
      "require": "./internal/index.js",
      "default": "./internal/index.js"
    },
    "./exports/*": {
      "default": "./exports/*.js"
    },
    "./Box": {
      "types": "./build/Box.d.ts",
      "import": {
        "types": "./build/Box.d.mts",
        "default": "./build/Box.mjs"
      },
      "require": "./build/Box.js",
      "default": "./build/Box.js"
    },
    "./RtlProvider": {
      "types": "./build/RtlProvider.d.ts",
      "import": {
        "types": "./build/RtlProvider.d.mts",
        "default": "./build/RtlProvider.mjs"
      },
      "require": "./build/RtlProvider.js",
      "default": "./build/RtlProvider.js"
    },
    "./Stack": {
      "types": "./build/Stack.d.ts",
      "import": {
        "types": "./build/Stack.d.mts",
        "default": "./build/Stack.mjs"
      },
      "require": "./build/Stack.js",
      "default": "./build/Stack.js"
    },
    "./Container": {
      "types": "./build/Container.d.ts",
      "import": {
        "types": "./build/Container.d.mts",
        "default": "./build/Container.mjs"
      },
      "require": "./build/Container.js",
      "default": "./build/Container.js"
    },
    "./Hidden": {
      "types": "./build/Hidden.d.ts",
      "import": {
        "types": "./build/Hidden.d.mts",
        "default": "./build/Hidden.mjs"
      },
      "require": "./build/Hidden.js",
      "default": "./build/Hidden.js"
    },
    "./Grid": {
      "types": "./build/Grid.d.ts",
      "import": {
        "types": "./build/Grid.d.mts",
        "default": "./build/Grid.mjs"
      },
      "require": "./build/Grid.js",
      "default": "./build/Grid.js"
    }
  },
  "nx": {
    "targets": {
      "test": {
        "cache": false,
        "dependsOn": [
          "build"
        ]
      },
      "test:update": {
        "cache": false,
        "dependsOn": [
          "build"
        ]
      },
      "test:ci": {
        "cache": false,
        "dependsOn": [
          "build"
        ]
      },
      "build": {
        "outputs": [
          "{projectRoot}/build",
          "{projectRoot}/processors",
          "{projectRoot}/utils"
        ]
      }
    }
  }
}
