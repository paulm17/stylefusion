{"version":3,"file":"shaker.js","names":["logger","collectExportsAndImports","sideEffectImport","getFileIdx","isRemoved","applyAction","dereference","findActionForNode","reference","removeWithRelated","invalidateTraversalCache","EXT_REGEX","ALLOWED_EXTENSIONS","shouldKeepSideEffect","importPath","ext","match","includes","getBindingForExport","exportPath","console","log","isIdentifier","scope","getBinding","node","name","variableDeclarator","findParent","p","isVariableDeclarator","id","get","isAssignmentExpression","left","isFunctionDeclaration","isClassDeclaration","undefined","withoutRemoved","items","filter","local","rearrangeExports","types","t","root","exportRefs","exports","rearranged","rootScope","forEach","refs","length","declarator","uid","generateUid","declaration","unshiftContainer","variableDeclaration","identifier","registerDeclaration","constantViolations","ref","replaced","replaceWith","isBindingIdentifier","push","registerConstantViolation","assigmentToExport","expressionStatement","assignmentExpression","memberExpression","body","lastViolation","pathInRoot","find","n","isDescendant","pushed","insertAfter","shakerPlugin","babel","keepSideEffects","ifUnknownExport","onlyExports","shakerLogger","extend","pre","file","filename","opts","join","onlyExportsSet","Set","collected","path","sideEffectImports","imports","Object","values","reexports","hasWywPreval","__wywPreval","hasDefault","default","has","delete","size","deadExports","keys","remove","importedAsSideEffect","isEsModule","add","aliveExports","importNames","map","imported","entries","exported","some","alive","exp","exportToPath","Map","set","notFoundExports","clear","isAllExportsFound","Error","forDeleting","i","source","deleted","dereferenced","changed","binding","action","parent","outerReferences","referencePaths","isAncestor","unreferenced","getAllBindings","referenced","visitor","post","processedImports","addImport","metadata","wywEvaluator"],"sources":["../../src/plugins/shaker.ts"],"sourcesContent":["import type { BabelFile, PluginObj, NodePath } from '@babel/core';\nimport type { Binding } from '@babel/traverse';\nimport type {\n  Identifier,\n  MemberExpression,\n  Program,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { logger } from '@wyw-in-js/shared';\n\nimport type { Core } from '../babel';\nimport type { IMetadata } from '../utils/ShakerMetadata';\nimport type { Exports, IState } from '../utils/collectExportsAndImports';\nimport {\n  collectExportsAndImports,\n  sideEffectImport,\n} from '../utils/collectExportsAndImports';\nimport { getFileIdx } from '../utils/getFileIdx';\nimport { isRemoved } from '../utils/isRemoved';\nimport {\n  applyAction,\n  dereference,\n  findActionForNode,\n  reference,\n  removeWithRelated,\n} from '../utils/scopeHelpers';\nimport { invalidateTraversalCache } from '../utils/traversalCache';\n\nconst EXT_REGEX = /\\.[0-9a-z]+$/;\nconst ALLOWED_EXTENSIONS = ['.js', '.cjs', '.mjs'];\n\nfunction shouldKeepSideEffect(importPath: string) {\n  const [ext] = importPath.match(EXT_REGEX) || [''];\n\n  return ext === '' || ALLOWED_EXTENSIONS.includes(ext);\n}\n\nexport interface IShakerOptions {\n  ifUnknownExport?: 'error' | 'ignore' | 'reexport-all' | 'skip-shaking';\n  keepSideEffects?: boolean;\n  onlyExports: string[];\n}\n\ninterface NodeWithName {\n  name: string;\n}\n\nfunction getBindingForExport(exportPath: NodePath): Binding | undefined {\n  console.log(\"shaker - getBindingForExport\");\n  if (exportPath.isIdentifier()) {\n    return exportPath.scope.getBinding(exportPath.node.name);\n  }\n\n  const variableDeclarator = exportPath.findParent((p) =>\n    p.isVariableDeclarator()\n  ) as NodePath<VariableDeclarator> | undefined;\n  if (variableDeclarator) {\n    const id = variableDeclarator.get('id');\n    if (id.isIdentifier()) {\n      return variableDeclarator.scope.getBinding(id.node.name);\n    }\n  }\n\n  if (exportPath.isAssignmentExpression()) {\n    const left = exportPath.get('left');\n    if (left.isIdentifier()) {\n      return exportPath.scope.getBinding(left.node.name);\n    }\n  }\n\n  if (exportPath.isFunctionDeclaration() || exportPath.isClassDeclaration()) {\n    return exportPath.scope.getBinding(exportPath.node.id!.name);\n  }\n\n  return undefined;\n}\n\nconst withoutRemoved = <T extends { local: NodePath }>(items: T[]): T[] =>\n  items.filter(({ local }) => !isRemoved(local));\n\nfunction rearrangeExports(\n  { types: t }: Core,\n  root: NodePath<Program>,\n  exportRefs: Map<string, NodePath<MemberExpression>[]>,\n  exports: Exports\n): Exports {\n  console.log(\"shaker - rearrangeExports\");\n  const rearranged = {\n    ...exports,\n  };\n\n  const rootScope = root.scope;\n  exportRefs.forEach((refs, name) => {\n    if (refs.length <= 1) {\n      if (refs.length === 1) {\n        // Maybe exports is assigned to another variable?\n        const declarator = refs[0].findParent((p) =>\n          p.isVariableDeclarator()\n        ) as NodePath<VariableDeclarator> | undefined;\n\n        if (!declarator) {\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n\n    const uid = rootScope.generateUid(name);\n    // Define variable in the beginning\n    const [declaration] = root.unshiftContainer('body', [\n      t.variableDeclaration('var', [t.variableDeclarator(t.identifier(uid))]),\n    ]);\n\n    rootScope.registerDeclaration(declaration);\n\n    const constantViolations: NodePath<Identifier>[] = [];\n    // Replace every reference with defined variable\n    refs.forEach((ref) => {\n      const [replaced] = ref.replaceWith(t.identifier(uid));\n      if (replaced.isBindingIdentifier()) {\n        constantViolations.push(replaced);\n      } else {\n        reference(replaced);\n      }\n    });\n\n    constantViolations.forEach((id) => {\n      rootScope.registerConstantViolation(id);\n    });\n\n    const assigmentToExport = t.expressionStatement(\n      t.assignmentExpression(\n        '=',\n        t.memberExpression(t.identifier('exports'), t.identifier(name)),\n        t.identifier(uid)\n      )\n    );\n\n    // export.foo = _foo will be inserted either after the last _foo assigment or in the end of the file\n    const body = root.get('body');\n    const lastViolation =\n      constantViolations[constantViolations.length - 1] ??\n      body[body.length - 1];\n    const pathInRoot = root\n      .get('body')\n      .find((n) => lastViolation.isDescendant(n))!;\n\n    const [pushed] = pathInRoot.insertAfter(assigmentToExport);\n\n    const local = pushed.get('expression.right') as NodePath<Identifier>;\n    reference(local);\n\n    rearranged[name] = local;\n  });\n\n  return rearranged;\n}\n\nexport default function shakerPlugin(\n  babel: Core,\n  {\n    keepSideEffects = false,\n    ifUnknownExport = 'skip-shaking',\n    onlyExports,\n  }: IShakerOptions\n): PluginObj<IState & { filename: string }> {\n  console.log(\"shaker - shakerPlugin\");\n  const shakerLogger = logger.extend('shaker');\n\n  return {\n    name: '@wyw-in-js/transform/shaker',\n    pre(file: BabelFile) {\n      this.filename = file.opts.filename!;\n      const log = shakerLogger.extend(getFileIdx(this.filename));\n\n      log('start', `${this.filename}, onlyExports: ${onlyExports.join(',')}`);\n      const onlyExportsSet = new Set(onlyExports);\n\n      const collected = collectExportsAndImports(file.path);\n      const sideEffectImports = collected.imports.filter(sideEffectImport);\n      log(\n        'import-and-exports',\n        [\n          `imports: ${collected.imports.length} (side-effects: ${sideEffectImports.length})`,\n          `exports: ${Object.values(collected.exports).length}`,\n          `reexports: ${collected.reexports.length}`,\n        ].join(', ')\n      );\n\n      // We cannot just throw out exports if they are referred in the code\n      // Let's dome some replacements\n      const exports = rearrangeExports(\n        babel,\n        file.path,\n        collected.exportRefs,\n        collected.exports\n      );\n\n      Object.values(exports).forEach((local) => {\n        if (local.isAssignmentExpression()) {\n          const left = local.get('left');\n          if (left.isIdentifier()) {\n            // For some reason babel does not mark id in AssignmentExpression as a reference\n            // So we need to do it manually\n            reference(left, left, true);\n          }\n        }\n      });\n\n      const hasWywPreval = exports.__wywPreval !== undefined;\n      const hasDefault = exports.default !== undefined;\n\n      // If __wywPreval is not exported, we can remove it from onlyExports\n      if (onlyExportsSet.has('__wywPreval') && !hasWywPreval) {\n        onlyExportsSet.delete('__wywPreval');\n      }\n\n      if (onlyExportsSet.size === 0) {\n        // Fast-lane: if there are no exports to keep, we can just shake out the whole file\n        this.imports = [];\n        this.exports = {};\n        this.reexports = [];\n        this.deadExports = Object.keys(exports);\n\n        file.path.get('body').forEach((p) => {\n          p.remove();\n        });\n\n        return;\n      }\n\n      const importedAsSideEffect = onlyExportsSet.has('side-effect');\n      onlyExportsSet.delete('side-effect');\n\n      // Hackaround for packages which include a 'default' export without specifying __esModule; such packages cannot be\n      // shaken as they will break interopRequireDefault babel helper\n      // See example in shaker-plugin.test.ts\n      // Real-world example was found in preact/compat npm package\n      if (\n        onlyExportsSet.has('default') &&\n        hasDefault &&\n        !collected.isEsModule\n      ) {\n        this.imports = collected.imports;\n        this.exports = exports;\n        this.reexports = collected.reexports;\n        this.deadExports = [];\n        return;\n      }\n\n      if (!onlyExportsSet.has('*')) {\n        // __esModule should be kept alive\n        onlyExportsSet.add('__esModule');\n\n        const aliveExports = new Set<NodePath>();\n        const importNames = collected.imports.map(({ imported }) => imported);\n\n        Object.entries(exports).forEach(([exported, local]) => {\n          if (onlyExportsSet.has(exported)) {\n            aliveExports.add(local);\n          } else if (\n            importNames.includes((local.node as NodeWithName).name || '')\n          ) {\n            aliveExports.add(local);\n          } else if ([...aliveExports].some((alive) => alive === local)) {\n            // It's possible to export multiple values from a single variable initializer, e.g\n            // export const { foo, bar } = baz();\n            // We need to treat all of them as used if any of them are used, since otherwise\n            // we'll attempt to delete the baz() call\n            aliveExports.add(local);\n          }\n        });\n\n        collected.reexports.forEach((exp) => {\n          if (onlyExportsSet.has(exp.exported)) {\n            aliveExports.add(exp.local);\n          }\n        });\n\n        const exportToPath = new Map<string, NodePath>();\n        Object.entries(exports).forEach(([exported, local]) => {\n          exportToPath.set(exported, local);\n        });\n\n        collected.reexports.forEach((exp) => {\n          exportToPath.set(exp.exported, exp.local);\n        });\n\n        const notFoundExports = [...onlyExportsSet].filter(\n          (exp) =>\n            exp !== '__esModule' && !aliveExports.has(exportToPath.get(exp)!)\n        );\n        exportToPath.clear();\n\n        const isAllExportsFound = notFoundExports.length === 0;\n        if (!isAllExportsFound && ifUnknownExport !== 'ignore') {\n          if (ifUnknownExport === 'error') {\n            throw new Error(\n              `Unknown export(s) requested: ${onlyExports.join(',')}`\n            );\n          }\n\n          if (ifUnknownExport === 'reexport-all') {\n            // If there are unknown exports, we have keep alive all re-exports.\n            if (exports['*'] !== undefined) {\n              aliveExports.add(exports['*']);\n            }\n\n            collected.reexports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp.local);\n              }\n            });\n          }\n\n          if (ifUnknownExport === 'skip-shaking') {\n            this.imports = collected.imports;\n            this.exports = exports;\n            this.reexports = collected.reexports;\n            this.deadExports = [];\n\n            return;\n          }\n        }\n\n        const forDeleting = [\n          ...Object.values(exports),\n          ...collected.reexports.map((i) => i.local),\n        ].filter((exp) => !aliveExports.has(exp));\n\n        if (!keepSideEffects && !importedAsSideEffect) {\n          // Remove all imports that don't import something explicitly and should not be kept\n          sideEffectImports.forEach((i) => {\n            if (!shouldKeepSideEffect(i.source)) {\n              forDeleting.push(i.local);\n            }\n          });\n        }\n\n        const deleted = new Set<NodePath>();\n\n        let dereferenced: NodePath<Identifier>[] = [];\n        let changed = true;\n        while (changed && deleted.size < forDeleting.length) {\n          changed = false;\n          // eslint-disable-next-line no-restricted-syntax\n          for (const path of forDeleting) {\n            if (deleted.has(path)) {\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const binding = getBindingForExport(path);\n            const action = findActionForNode(path);\n            const parent = action?.[1];\n            const outerReferences = (binding?.referencePaths || []).filter(\n              (ref) => ref !== parent && !parent?.isAncestor(ref)\n            );\n            if (outerReferences.length > 0 && path.isIdentifier()) {\n              // Temporary deref it in order to simplify further checks.\n              dereference(path);\n              dereferenced.push(path);\n            }\n\n            if (\n              !deleted.has(path) &&\n              (!binding || outerReferences.length === 0)\n            ) {\n              if (action) {\n                applyAction(action);\n              } else {\n                removeWithRelated([path]);\n              }\n\n              deleted.add(path);\n              changed = true;\n            }\n          }\n\n          dereferenced.forEach((path) => {\n            // If path is still alive, we need to reference it back\n            if (!isRemoved(path)) {\n              reference(path);\n            }\n          });\n\n          dereferenced = [];\n\n          // Find and mark for deleting all unreferenced variables\n          const unreferenced = Object.values(\n            file.scope.getAllBindings()\n          ).filter((i) => !i.referenced);\n\n          for (const binding of unreferenced) {\n            if (\n              binding.path.isVariableDeclarator() &&\n              !forDeleting.includes(binding.path.get('id'))\n            ) {\n              forDeleting.push(...binding.constantViolations);\n              forDeleting.push(binding.path.get('id'));\n              changed = true;\n            }\n          }\n        }\n      }\n\n      this.imports = withoutRemoved(collected.imports);\n      this.exports = {};\n      this.deadExports = [];\n\n      Object.entries(exports).forEach(([exported, local]) => {\n        if (isRemoved(local)) {\n          this.deadExports.push(exported);\n        } else {\n          this.exports[exported] = local;\n        }\n      });\n\n      this.reexports = withoutRemoved(collected.reexports);\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      const log = shakerLogger.extend(getFileIdx(file.opts.filename!));\n\n      const processedImports = new Set<string>();\n      const imports = new Map<string, string[]>();\n      const addImport = ({\n        imported,\n        source,\n      }: {\n        imported: string;\n        source: string;\n      }) => {\n        if (processedImports.has(`${source}:${imported}`)) {\n          return;\n        }\n\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        if (imported) {\n          imports.get(source)!.push(imported);\n        }\n\n        processedImports.add(`${source}:${imported}`);\n      };\n\n      this.imports.forEach(addImport);\n      this.reexports.forEach(addImport);\n\n      log('end', `remaining imports: %O`, imports);\n\n      // eslint-disable-next-line no-param-reassign\n      (file.metadata as IMetadata).wywEvaluator = {\n        imports,\n      };\n\n      invalidateTraversalCache(file.path);\n    },\n  };\n}\n"],"mappings":"AASA,SAASA,MAAM,QAAQ,mBAAmB;AAK1C,SACEC,wBAAwB,EACxBC,gBAAgB,QACX,mCAAmC;AAC1C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SACEC,WAAW,EACXC,WAAW,EACXC,iBAAiB,EACjBC,SAAS,EACTC,iBAAiB,QACZ,uBAAuB;AAC9B,SAASC,wBAAwB,QAAQ,yBAAyB;AAElE,MAAMC,SAAS,GAAG,cAAc;AAChC,MAAMC,kBAAkB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;AAElD,SAASC,oBAAoBA,CAACC,UAAkB,EAAE;EAChD,MAAM,CAACC,GAAG,CAAC,GAAGD,UAAU,CAACE,KAAK,CAACL,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;EAEjD,OAAOI,GAAG,KAAK,EAAE,IAAIH,kBAAkB,CAACK,QAAQ,CAACF,GAAG,CAAC;AACvD;AAYA,SAASG,mBAAmBA,CAACC,UAAoB,EAAuB;EACtEC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC3C,IAAIF,UAAU,CAACG,YAAY,CAAC,CAAC,EAAE;IAC7B,OAAOH,UAAU,CAACI,KAAK,CAACC,UAAU,CAACL,UAAU,CAACM,IAAI,CAACC,IAAI,CAAC;EAC1D;EAEA,MAAMC,kBAAkB,GAAGR,UAAU,CAACS,UAAU,CAAEC,CAAC,IACjDA,CAAC,CAACC,oBAAoB,CAAC,CACzB,CAA6C;EAC7C,IAAIH,kBAAkB,EAAE;IACtB,MAAMI,EAAE,GAAGJ,kBAAkB,CAACK,GAAG,CAAC,IAAI,CAAC;IACvC,IAAID,EAAE,CAACT,YAAY,CAAC,CAAC,EAAE;MACrB,OAAOK,kBAAkB,CAACJ,KAAK,CAACC,UAAU,CAACO,EAAE,CAACN,IAAI,CAACC,IAAI,CAAC;IAC1D;EACF;EAEA,IAAIP,UAAU,CAACc,sBAAsB,CAAC,CAAC,EAAE;IACvC,MAAMC,IAAI,GAAGf,UAAU,CAACa,GAAG,CAAC,MAAM,CAAC;IACnC,IAAIE,IAAI,CAACZ,YAAY,CAAC,CAAC,EAAE;MACvB,OAAOH,UAAU,CAACI,KAAK,CAACC,UAAU,CAACU,IAAI,CAACT,IAAI,CAACC,IAAI,CAAC;IACpD;EACF;EAEA,IAAIP,UAAU,CAACgB,qBAAqB,CAAC,CAAC,IAAIhB,UAAU,CAACiB,kBAAkB,CAAC,CAAC,EAAE;IACzE,OAAOjB,UAAU,CAACI,KAAK,CAACC,UAAU,CAACL,UAAU,CAACM,IAAI,CAACM,EAAE,CAAEL,IAAI,CAAC;EAC9D;EAEA,OAAOW,SAAS;AAClB;AAEA,MAAMC,cAAc,GAAmCC,KAAU,IAC/DA,KAAK,CAACC,MAAM,CAAC,CAAC;EAAEC;AAAM,CAAC,KAAK,CAACrC,SAAS,CAACqC,KAAK,CAAC,CAAC;AAEhD,SAASC,gBAAgBA,CACvB;EAAEC,KAAK,EAAEC;AAAQ,CAAC,EAClBC,IAAuB,EACvBC,UAAqD,EACrDC,OAAgB,EACP;EACT3B,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,MAAM2B,UAAU,GAAG;IACjB,GAAGD;EACL,CAAC;EAED,MAAME,SAAS,GAAGJ,IAAI,CAACtB,KAAK;EAC5BuB,UAAU,CAACI,OAAO,CAAC,CAACC,IAAI,EAAEzB,IAAI,KAAK;IACjC,IAAIyB,IAAI,CAACC,MAAM,IAAI,CAAC,EAAE;MACpB,IAAID,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrB;QACA,MAAMC,UAAU,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACvB,UAAU,CAAEC,CAAC,IACtCA,CAAC,CAACC,oBAAoB,CAAC,CACzB,CAA6C;QAE7C,IAAI,CAACuB,UAAU,EAAE;UACf;QACF;MACF,CAAC,MAAM;QACL;MACF;IACF;IAEA,MAAMC,GAAG,GAAGL,SAAS,CAACM,WAAW,CAAC7B,IAAI,CAAC;IACvC;IACA,MAAM,CAAC8B,WAAW,CAAC,GAAGX,IAAI,CAACY,gBAAgB,CAAC,MAAM,EAAE,CAClDb,CAAC,CAACc,mBAAmB,CAAC,KAAK,EAAE,CAACd,CAAC,CAACjB,kBAAkB,CAACiB,CAAC,CAACe,UAAU,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CACxE,CAAC;IAEFL,SAAS,CAACW,mBAAmB,CAACJ,WAAW,CAAC;IAE1C,MAAMK,kBAA0C,GAAG,EAAE;IACrD;IACAV,IAAI,CAACD,OAAO,CAAEY,GAAG,IAAK;MACpB,MAAM,CAACC,QAAQ,CAAC,GAAGD,GAAG,CAACE,WAAW,CAACpB,CAAC,CAACe,UAAU,CAACL,GAAG,CAAC,CAAC;MACrD,IAAIS,QAAQ,CAACE,mBAAmB,CAAC,CAAC,EAAE;QAClCJ,kBAAkB,CAACK,IAAI,CAACH,QAAQ,CAAC;MACnC,CAAC,MAAM;QACLvD,SAAS,CAACuD,QAAQ,CAAC;MACrB;IACF,CAAC,CAAC;IAEFF,kBAAkB,CAACX,OAAO,CAAEnB,EAAE,IAAK;MACjCkB,SAAS,CAACkB,yBAAyB,CAACpC,EAAE,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMqC,iBAAiB,GAAGxB,CAAC,CAACyB,mBAAmB,CAC7CzB,CAAC,CAAC0B,oBAAoB,CACpB,GAAG,EACH1B,CAAC,CAAC2B,gBAAgB,CAAC3B,CAAC,CAACe,UAAU,CAAC,SAAS,CAAC,EAAEf,CAAC,CAACe,UAAU,CAACjC,IAAI,CAAC,CAAC,EAC/DkB,CAAC,CAACe,UAAU,CAACL,GAAG,CAClB,CACF,CAAC;;IAED;IACA,MAAMkB,IAAI,GAAG3B,IAAI,CAACb,GAAG,CAAC,MAAM,CAAC;IAC7B,MAAMyC,aAAa,GACjBZ,kBAAkB,CAACA,kBAAkB,CAACT,MAAM,GAAG,CAAC,CAAC,IACjDoB,IAAI,CAACA,IAAI,CAACpB,MAAM,GAAG,CAAC,CAAC;IACvB,MAAMsB,UAAU,GAAG7B,IAAI,CACpBb,GAAG,CAAC,MAAM,CAAC,CACX2C,IAAI,CAAEC,CAAC,IAAKH,aAAa,CAACI,YAAY,CAACD,CAAC,CAAC,CAAE;IAE9C,MAAM,CAACE,MAAM,CAAC,GAAGJ,UAAU,CAACK,WAAW,CAACX,iBAAiB,CAAC;IAE1D,MAAM3B,KAAK,GAAGqC,MAAM,CAAC9C,GAAG,CAAC,kBAAkB,CAAyB;IACpExB,SAAS,CAACiC,KAAK,CAAC;IAEhBO,UAAU,CAACtB,IAAI,CAAC,GAAGe,KAAK;EAC1B,CAAC,CAAC;EAEF,OAAOO,UAAU;AACnB;AAEA,eAAe,SAASgC,YAAYA,CAClCC,KAAW,EACX;EACEC,eAAe,GAAG,KAAK;EACvBC,eAAe,GAAG,cAAc;EAChCC;AACc,CAAC,EACyB;EAC1ChE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAMgE,YAAY,GAAGrF,MAAM,CAACsF,MAAM,CAAC,QAAQ,CAAC;EAE5C,OAAO;IACL5D,IAAI,EAAE,6BAA6B;IACnC6D,GAAGA,CAACC,IAAe,EAAE;MACnB,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,IAAI,CAACD,QAAS;MACnC,MAAMpE,GAAG,GAAGgE,YAAY,CAACC,MAAM,CAACnF,UAAU,CAAC,IAAI,CAACsF,QAAQ,CAAC,CAAC;MAE1DpE,GAAG,CAAC,OAAO,EAAG,GAAE,IAAI,CAACoE,QAAS,kBAAiBL,WAAW,CAACO,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;MACvE,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAACT,WAAW,CAAC;MAE3C,MAAMU,SAAS,GAAG7F,wBAAwB,CAACuF,IAAI,CAACO,IAAI,CAAC;MACrD,MAAMC,iBAAiB,GAAGF,SAAS,CAACG,OAAO,CAACzD,MAAM,CAACtC,gBAAgB,CAAC;MACpEmB,GAAG,CACD,oBAAoB,EACpB,CACG,YAAWyE,SAAS,CAACG,OAAO,CAAC7C,MAAO,mBAAkB4C,iBAAiB,CAAC5C,MAAO,GAAE,EACjF,YAAW8C,MAAM,CAACC,MAAM,CAACL,SAAS,CAAC/C,OAAO,CAAC,CAACK,MAAO,EAAC,EACpD,cAAa0C,SAAS,CAACM,SAAS,CAAChD,MAAO,EAAC,CAC3C,CAACuC,IAAI,CAAC,IAAI,CACb,CAAC;;MAED;MACA;MACA,MAAM5C,OAAO,GAAGL,gBAAgB,CAC9BuC,KAAK,EACLO,IAAI,CAACO,IAAI,EACTD,SAAS,CAAChD,UAAU,EACpBgD,SAAS,CAAC/C,OACZ,CAAC;MAEDmD,MAAM,CAACC,MAAM,CAACpD,OAAO,CAAC,CAACG,OAAO,CAAET,KAAK,IAAK;QACxC,IAAIA,KAAK,CAACR,sBAAsB,CAAC,CAAC,EAAE;UAClC,MAAMC,IAAI,GAAGO,KAAK,CAACT,GAAG,CAAC,MAAM,CAAC;UAC9B,IAAIE,IAAI,CAACZ,YAAY,CAAC,CAAC,EAAE;YACvB;YACA;YACAd,SAAS,CAAC0B,IAAI,EAAEA,IAAI,EAAE,IAAI,CAAC;UAC7B;QACF;MACF,CAAC,CAAC;MAEF,MAAMmE,YAAY,GAAGtD,OAAO,CAACuD,WAAW,KAAKjE,SAAS;MACtD,MAAMkE,UAAU,GAAGxD,OAAO,CAACyD,OAAO,KAAKnE,SAAS;;MAEhD;MACA,IAAIuD,cAAc,CAACa,GAAG,CAAC,aAAa,CAAC,IAAI,CAACJ,YAAY,EAAE;QACtDT,cAAc,CAACc,MAAM,CAAC,aAAa,CAAC;MACtC;MAEA,IAAId,cAAc,CAACe,IAAI,KAAK,CAAC,EAAE;QAC7B;QACA,IAAI,CAACV,OAAO,GAAG,EAAE;QACjB,IAAI,CAAClD,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAACqD,SAAS,GAAG,EAAE;QACnB,IAAI,CAACQ,WAAW,GAAGV,MAAM,CAACW,IAAI,CAAC9D,OAAO,CAAC;QAEvCyC,IAAI,CAACO,IAAI,CAAC/D,GAAG,CAAC,MAAM,CAAC,CAACkB,OAAO,CAAErB,CAAC,IAAK;UACnCA,CAAC,CAACiF,MAAM,CAAC,CAAC;QACZ,CAAC,CAAC;QAEF;MACF;MAEA,MAAMC,oBAAoB,GAAGnB,cAAc,CAACa,GAAG,CAAC,aAAa,CAAC;MAC9Db,cAAc,CAACc,MAAM,CAAC,aAAa,CAAC;;MAEpC;MACA;MACA;MACA;MACA,IACEd,cAAc,CAACa,GAAG,CAAC,SAAS,CAAC,IAC7BF,UAAU,IACV,CAACT,SAAS,CAACkB,UAAU,EACrB;QACA,IAAI,CAACf,OAAO,GAAGH,SAAS,CAACG,OAAO;QAChC,IAAI,CAAClD,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACqD,SAAS,GAAGN,SAAS,CAACM,SAAS;QACpC,IAAI,CAACQ,WAAW,GAAG,EAAE;QACrB;MACF;MAEA,IAAI,CAAChB,cAAc,CAACa,GAAG,CAAC,GAAG,CAAC,EAAE;QAC5B;QACAb,cAAc,CAACqB,GAAG,CAAC,YAAY,CAAC;QAEhC,MAAMC,YAAY,GAAG,IAAIrB,GAAG,CAAW,CAAC;QACxC,MAAMsB,WAAW,GAAGrB,SAAS,CAACG,OAAO,CAACmB,GAAG,CAAC,CAAC;UAAEC;QAAS,CAAC,KAAKA,QAAQ,CAAC;QAErEnB,MAAM,CAACoB,OAAO,CAACvE,OAAO,CAAC,CAACG,OAAO,CAAC,CAAC,CAACqE,QAAQ,EAAE9E,KAAK,CAAC,KAAK;UACrD,IAAImD,cAAc,CAACa,GAAG,CAACc,QAAQ,CAAC,EAAE;YAChCL,YAAY,CAACD,GAAG,CAACxE,KAAK,CAAC;UACzB,CAAC,MAAM,IACL0E,WAAW,CAAClG,QAAQ,CAAEwB,KAAK,CAAChB,IAAI,CAAkBC,IAAI,IAAI,EAAE,CAAC,EAC7D;YACAwF,YAAY,CAACD,GAAG,CAACxE,KAAK,CAAC;UACzB,CAAC,MAAM,IAAI,CAAC,GAAGyE,YAAY,CAAC,CAACM,IAAI,CAAEC,KAAK,IAAKA,KAAK,KAAKhF,KAAK,CAAC,EAAE;YAC7D;YACA;YACA;YACA;YACAyE,YAAY,CAACD,GAAG,CAACxE,KAAK,CAAC;UACzB;QACF,CAAC,CAAC;QAEFqD,SAAS,CAACM,SAAS,CAAClD,OAAO,CAAEwE,GAAG,IAAK;UACnC,IAAI9B,cAAc,CAACa,GAAG,CAACiB,GAAG,CAACH,QAAQ,CAAC,EAAE;YACpCL,YAAY,CAACD,GAAG,CAACS,GAAG,CAACjF,KAAK,CAAC;UAC7B;QACF,CAAC,CAAC;QAEF,MAAMkF,YAAY,GAAG,IAAIC,GAAG,CAAmB,CAAC;QAChD1B,MAAM,CAACoB,OAAO,CAACvE,OAAO,CAAC,CAACG,OAAO,CAAC,CAAC,CAACqE,QAAQ,EAAE9E,KAAK,CAAC,KAAK;UACrDkF,YAAY,CAACE,GAAG,CAACN,QAAQ,EAAE9E,KAAK,CAAC;QACnC,CAAC,CAAC;QAEFqD,SAAS,CAACM,SAAS,CAAClD,OAAO,CAAEwE,GAAG,IAAK;UACnCC,YAAY,CAACE,GAAG,CAACH,GAAG,CAACH,QAAQ,EAAEG,GAAG,CAACjF,KAAK,CAAC;QAC3C,CAAC,CAAC;QAEF,MAAMqF,eAAe,GAAG,CAAC,GAAGlC,cAAc,CAAC,CAACpD,MAAM,CAC/CkF,GAAG,IACFA,GAAG,KAAK,YAAY,IAAI,CAACR,YAAY,CAACT,GAAG,CAACkB,YAAY,CAAC3F,GAAG,CAAC0F,GAAG,CAAE,CACpE,CAAC;QACDC,YAAY,CAACI,KAAK,CAAC,CAAC;QAEpB,MAAMC,iBAAiB,GAAGF,eAAe,CAAC1E,MAAM,KAAK,CAAC;QACtD,IAAI,CAAC4E,iBAAiB,IAAI7C,eAAe,KAAK,QAAQ,EAAE;UACtD,IAAIA,eAAe,KAAK,OAAO,EAAE;YAC/B,MAAM,IAAI8C,KAAK,CACZ,gCAA+B7C,WAAW,CAACO,IAAI,CAAC,GAAG,CAAE,EACxD,CAAC;UACH;UAEA,IAAIR,eAAe,KAAK,cAAc,EAAE;YACtC;YACA,IAAIpC,OAAO,CAAC,GAAG,CAAC,KAAKV,SAAS,EAAE;cAC9B6E,YAAY,CAACD,GAAG,CAAClE,OAAO,CAAC,GAAG,CAAC,CAAC;YAChC;YAEA+C,SAAS,CAACM,SAAS,CAAClD,OAAO,CAAEwE,GAAG,IAAK;cACnC,IAAIA,GAAG,CAACH,QAAQ,KAAK,GAAG,EAAE;gBACxBL,YAAY,CAACD,GAAG,CAACS,GAAG,CAACjF,KAAK,CAAC;cAC7B;YACF,CAAC,CAAC;UACJ;UAEA,IAAI0C,eAAe,KAAK,cAAc,EAAE;YACtC,IAAI,CAACc,OAAO,GAAGH,SAAS,CAACG,OAAO;YAChC,IAAI,CAAClD,OAAO,GAAGA,OAAO;YACtB,IAAI,CAACqD,SAAS,GAAGN,SAAS,CAACM,SAAS;YACpC,IAAI,CAACQ,WAAW,GAAG,EAAE;YAErB;UACF;QACF;QAEA,MAAMsB,WAAW,GAAG,CAClB,GAAGhC,MAAM,CAACC,MAAM,CAACpD,OAAO,CAAC,EACzB,GAAG+C,SAAS,CAACM,SAAS,CAACgB,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAAC1F,KAAK,CAAC,CAC3C,CAACD,MAAM,CAAEkF,GAAG,IAAK,CAACR,YAAY,CAACT,GAAG,CAACiB,GAAG,CAAC,CAAC;QAEzC,IAAI,CAACxC,eAAe,IAAI,CAAC6B,oBAAoB,EAAE;UAC7C;UACAf,iBAAiB,CAAC9C,OAAO,CAAEiF,CAAC,IAAK;YAC/B,IAAI,CAACtH,oBAAoB,CAACsH,CAAC,CAACC,MAAM,CAAC,EAAE;cACnCF,WAAW,CAAChE,IAAI,CAACiE,CAAC,CAAC1F,KAAK,CAAC;YAC3B;UACF,CAAC,CAAC;QACJ;QAEA,MAAM4F,OAAO,GAAG,IAAIxC,GAAG,CAAW,CAAC;QAEnC,IAAIyC,YAAoC,GAAG,EAAE;QAC7C,IAAIC,OAAO,GAAG,IAAI;QAClB,OAAOA,OAAO,IAAIF,OAAO,CAAC1B,IAAI,GAAGuB,WAAW,CAAC9E,MAAM,EAAE;UACnDmF,OAAO,GAAG,KAAK;UACf;UACA,KAAK,MAAMxC,IAAI,IAAImC,WAAW,EAAE;YAC9B,IAAIG,OAAO,CAAC5B,GAAG,CAACV,IAAI,CAAC,EAAE;cACrB;cACA;YACF;YAEA,MAAMyC,OAAO,GAAGtH,mBAAmB,CAAC6E,IAAI,CAAC;YACzC,MAAM0C,MAAM,GAAGlI,iBAAiB,CAACwF,IAAI,CAAC;YACtC,MAAM2C,MAAM,GAAGD,MAAM,GAAG,CAAC,CAAC;YAC1B,MAAME,eAAe,GAAG,CAACH,OAAO,EAAEI,cAAc,IAAI,EAAE,EAAEpG,MAAM,CAC3DsB,GAAG,IAAKA,GAAG,KAAK4E,MAAM,IAAI,CAACA,MAAM,EAAEG,UAAU,CAAC/E,GAAG,CACpD,CAAC;YACD,IAAI6E,eAAe,CAACvF,MAAM,GAAG,CAAC,IAAI2C,IAAI,CAACzE,YAAY,CAAC,CAAC,EAAE;cACrD;cACAhB,WAAW,CAACyF,IAAI,CAAC;cACjBuC,YAAY,CAACpE,IAAI,CAAC6B,IAAI,CAAC;YACzB;YAEA,IACE,CAACsC,OAAO,CAAC5B,GAAG,CAACV,IAAI,CAAC,KACjB,CAACyC,OAAO,IAAIG,eAAe,CAACvF,MAAM,KAAK,CAAC,CAAC,EAC1C;cACA,IAAIqF,MAAM,EAAE;gBACVpI,WAAW,CAACoI,MAAM,CAAC;cACrB,CAAC,MAAM;gBACLhI,iBAAiB,CAAC,CAACsF,IAAI,CAAC,CAAC;cAC3B;cAEAsC,OAAO,CAACpB,GAAG,CAAClB,IAAI,CAAC;cACjBwC,OAAO,GAAG,IAAI;YAChB;UACF;UAEAD,YAAY,CAACpF,OAAO,CAAE6C,IAAI,IAAK;YAC7B;YACA,IAAI,CAAC3F,SAAS,CAAC2F,IAAI,CAAC,EAAE;cACpBvF,SAAS,CAACuF,IAAI,CAAC;YACjB;UACF,CAAC,CAAC;UAEFuC,YAAY,GAAG,EAAE;;UAEjB;UACA,MAAMQ,YAAY,GAAG5C,MAAM,CAACC,MAAM,CAChCX,IAAI,CAACjE,KAAK,CAACwH,cAAc,CAAC,CAC5B,CAAC,CAACvG,MAAM,CAAE2F,CAAC,IAAK,CAACA,CAAC,CAACa,UAAU,CAAC;UAE9B,KAAK,MAAMR,OAAO,IAAIM,YAAY,EAAE;YAClC,IACEN,OAAO,CAACzC,IAAI,CAACjE,oBAAoB,CAAC,CAAC,IACnC,CAACoG,WAAW,CAACjH,QAAQ,CAACuH,OAAO,CAACzC,IAAI,CAAC/D,GAAG,CAAC,IAAI,CAAC,CAAC,EAC7C;cACAkG,WAAW,CAAChE,IAAI,CAAC,GAAGsE,OAAO,CAAC3E,kBAAkB,CAAC;cAC/CqE,WAAW,CAAChE,IAAI,CAACsE,OAAO,CAACzC,IAAI,CAAC/D,GAAG,CAAC,IAAI,CAAC,CAAC;cACxCuG,OAAO,GAAG,IAAI;YAChB;UACF;QACF;MACF;MAEA,IAAI,CAACtC,OAAO,GAAG3D,cAAc,CAACwD,SAAS,CAACG,OAAO,CAAC;MAChD,IAAI,CAAClD,OAAO,GAAG,CAAC,CAAC;MACjB,IAAI,CAAC6D,WAAW,GAAG,EAAE;MAErBV,MAAM,CAACoB,OAAO,CAACvE,OAAO,CAAC,CAACG,OAAO,CAAC,CAAC,CAACqE,QAAQ,EAAE9E,KAAK,CAAC,KAAK;QACrD,IAAIrC,SAAS,CAACqC,KAAK,CAAC,EAAE;UACpB,IAAI,CAACmE,WAAW,CAAC1C,IAAI,CAACqD,QAAQ,CAAC;QACjC,CAAC,MAAM;UACL,IAAI,CAACxE,OAAO,CAACwE,QAAQ,CAAC,GAAG9E,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAI,CAAC2D,SAAS,GAAG9D,cAAc,CAACwD,SAAS,CAACM,SAAS,CAAC;IACtD,CAAC;IACD6C,OAAO,EAAE,CAAC,CAAC;IACXC,IAAIA,CAAC1D,IAAe,EAAE;MACpB,MAAMnE,GAAG,GAAGgE,YAAY,CAACC,MAAM,CAACnF,UAAU,CAACqF,IAAI,CAACE,IAAI,CAACD,QAAS,CAAC,CAAC;MAEhE,MAAM0D,gBAAgB,GAAG,IAAItD,GAAG,CAAS,CAAC;MAC1C,MAAMI,OAAO,GAAG,IAAI2B,GAAG,CAAmB,CAAC;MAC3C,MAAMwB,SAAS,GAAGA,CAAC;QACjB/B,QAAQ;QACRe;MAIF,CAAC,KAAK;QACJ,IAAIe,gBAAgB,CAAC1C,GAAG,CAAE,GAAE2B,MAAO,IAAGf,QAAS,EAAC,CAAC,EAAE;UACjD;QACF;QAEA,IAAI,CAACpB,OAAO,CAACQ,GAAG,CAAC2B,MAAM,CAAC,EAAE;UACxBnC,OAAO,CAAC4B,GAAG,CAACO,MAAM,EAAE,EAAE,CAAC;QACzB;QAEA,IAAIf,QAAQ,EAAE;UACZpB,OAAO,CAACjE,GAAG,CAACoG,MAAM,CAAC,CAAElE,IAAI,CAACmD,QAAQ,CAAC;QACrC;QAEA8B,gBAAgB,CAAClC,GAAG,CAAE,GAAEmB,MAAO,IAAGf,QAAS,EAAC,CAAC;MAC/C,CAAC;MAED,IAAI,CAACpB,OAAO,CAAC/C,OAAO,CAACkG,SAAS,CAAC;MAC/B,IAAI,CAAChD,SAAS,CAAClD,OAAO,CAACkG,SAAS,CAAC;MAEjC/H,GAAG,CAAC,KAAK,EAAG,uBAAsB,EAAE4E,OAAO,CAAC;;MAE5C;MACCT,IAAI,CAAC6D,QAAQ,CAAeC,YAAY,GAAG;QAC1CrD;MACF,CAAC;MAEDvF,wBAAwB,CAAC8E,IAAI,CAACO,IAAI,CAAC;IACrC;EACF,CAAC;AACH","ignoreList":[]}