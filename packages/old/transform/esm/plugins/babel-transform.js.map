{"version":3,"file":"babel-transform.js","names":["logger","syncResolve","loadWywOptions","TransformCacheCollection","transformSync","collector","babelTransform","babel","options","console","log","cache","debug","extend","name","pre","file","collect","valueCache","data","loadedAndParsed","entrypoint","pluginOptions","services","evaluator","Error","ast","code","opts","filename","root","undefined","inputSourceMap","visitor","post"],"sources":["../../src/plugins/babel-transform.ts"],"sourcesContent":["import type { BabelFile, PluginObj } from '@babel/core';\n\nimport { logger, syncResolve } from '@wyw-in-js/shared';\n\nimport { loadWywOptions } from '../transform/helpers/loadWywOptions';\nimport type { Core } from '../babel';\nimport { TransformCacheCollection } from '../cache';\nimport { transformSync } from '../transform';\nimport type { ICollectAction, SyncScenarioForAction } from '../transform/types';\nimport type { IPluginState, PluginOptions } from '../types';\n\nimport { collector } from './collector';\n\nexport default function babelTransform(\n  babel: Core,\n  options: Partial<PluginOptions>\n): PluginObj<IPluginState> {\n  console.log(\"babel-transform - bableTransform\");\n  const cache = new TransformCacheCollection();\n  const debug = logger.extend('babel-transform');\n\n  return {\n    name: '@wyw-in-js/transform/babel-transform',\n    pre(file: BabelFile) {\n      // eslint-disable-next-line require-yield\n      function* collect(\n        this: ICollectAction\n      ): SyncScenarioForAction<ICollectAction> {\n        const { valueCache } = this.data;\n        const { loadedAndParsed } = this.entrypoint;\n        const { pluginOptions } = this.services.options;\n        if (loadedAndParsed.evaluator === 'ignored') {\n          throw new Error('entrypoint was ignored');\n        }\n\n        collector(file, pluginOptions, valueCache);\n\n        return {\n          ast: loadedAndParsed.ast,\n          code: loadedAndParsed.code,\n        };\n      }\n\n      debug('start %s', file.opts.filename);\n\n      const pluginOptions = loadWywOptions(options);\n\n      transformSync(\n        {\n          babel,\n          cache,\n          options: {\n            filename: file.opts.filename!,\n            root: file.opts.root ?? undefined,\n            inputSourceMap: file.opts.inputSourceMap ?? undefined,\n            pluginOptions,\n          },\n        },\n        file.code,\n        syncResolve,\n        {\n          collect,\n        }\n      );\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      debug('end %s', file.opts.filename);\n    },\n  };\n}\n"],"mappings":"AAEA,SAASA,MAAM,EAAEC,WAAW,QAAQ,mBAAmB;AAEvD,SAASC,cAAc,QAAQ,qCAAqC;AAEpE,SAASC,wBAAwB,QAAQ,UAAU;AACnD,SAASC,aAAa,QAAQ,cAAc;AAI5C,SAASC,SAAS,QAAQ,aAAa;AAEvC,eAAe,SAASC,cAAcA,CACpCC,KAAW,EACXC,OAA+B,EACN;EACzBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/C,MAAMC,KAAK,GAAG,IAAIR,wBAAwB,CAAC,CAAC;EAC5C,MAAMS,KAAK,GAAGZ,MAAM,CAACa,MAAM,CAAC,iBAAiB,CAAC;EAE9C,OAAO;IACLC,IAAI,EAAE,sCAAsC;IAC5CC,GAAGA,CAACC,IAAe,EAAE;MACnB;MACA,UAAUC,OAAOA,CAAA,EAEwB;QACvC,MAAM;UAAEC;QAAW,CAAC,GAAG,IAAI,CAACC,IAAI;QAChC,MAAM;UAAEC;QAAgB,CAAC,GAAG,IAAI,CAACC,UAAU;QAC3C,MAAM;UAAEC;QAAc,CAAC,GAAG,IAAI,CAACC,QAAQ,CAACf,OAAO;QAC/C,IAAIY,eAAe,CAACI,SAAS,KAAK,SAAS,EAAE;UAC3C,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEApB,SAAS,CAACW,IAAI,EAAEM,aAAa,EAAEJ,UAAU,CAAC;QAE1C,OAAO;UACLQ,GAAG,EAAEN,eAAe,CAACM,GAAG;UACxBC,IAAI,EAAEP,eAAe,CAACO;QACxB,CAAC;MACH;MAEAf,KAAK,CAAC,UAAU,EAAEI,IAAI,CAACY,IAAI,CAACC,QAAQ,CAAC;MAErC,MAAMP,aAAa,GAAGpB,cAAc,CAACM,OAAO,CAAC;MAE7CJ,aAAa,CACX;QACEG,KAAK;QACLI,KAAK;QACLH,OAAO,EAAE;UACPqB,QAAQ,EAAEb,IAAI,CAACY,IAAI,CAACC,QAAS;UAC7BC,IAAI,EAAEd,IAAI,CAACY,IAAI,CAACE,IAAI,IAAIC,SAAS;UACjCC,cAAc,EAAEhB,IAAI,CAACY,IAAI,CAACI,cAAc,IAAID,SAAS;UACrDT;QACF;MACF,CAAC,EACDN,IAAI,CAACW,IAAI,EACT1B,WAAW,EACX;QACEgB;MACF,CACF,CAAC;IACH,CAAC;IACDgB,OAAO,EAAE,CAAC,CAAC;IACXC,IAAIA,CAAClB,IAAe,EAAE;MACpBJ,KAAK,CAAC,QAAQ,EAAEI,IAAI,CAACY,IAAI,CAACC,QAAQ,CAAC;IACrC;EACF,CAAC;AACH","ignoreList":[]}