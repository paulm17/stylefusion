{"version":3,"file":"cache.js","names":["createHash","logger","getFileIdx","hashContent","content","console","log","update","digest","cacheLogger","extend","cacheNames","loggers","reduce","acc","key","TransformCacheCollection","contentHashes","Map","constructor","caches","entrypoints","exports","add","cacheName","value","cache","has","get","set","clear","forEach","name","delete","invalidate","res","undefined","invalidateForFile","filename","invalidateIfChanged","hash","newHash"],"sources":["../src/cache.ts"],"sourcesContent":["import { createHash } from 'crypto';\n\nimport { logger } from '@wyw-in-js/shared';\n\nimport type { Entrypoint } from './transform/Entrypoint';\nimport type { IEvaluatedEntrypoint } from './transform/EvaluatedEntrypoint';\nimport { getFileIdx } from './utils/getFileIdx';\n\nfunction hashContent(content: string) {\n  console.log(\"cache.ts - hashContent\");\n  return createHash('sha256').update(content).digest('hex');\n}\n\ninterface ICaches {\n  entrypoints: Map<string, Entrypoint | IEvaluatedEntrypoint>;\n  exports: Map<string, string[]>;\n}\n\ntype MapValue<T> = T extends Map<string, infer V> ? V : never;\n\nconst cacheLogger = logger.extend('cache');\n\nconst cacheNames = ['entrypoints', 'exports'] as const;\ntype CacheNames = (typeof cacheNames)[number];\n\nconst loggers = cacheNames.reduce(\n  (acc, key) => ({\n    ...acc,\n    [key]: cacheLogger.extend(key),\n  }),\n  {} as Record<CacheNames, typeof logger>\n);\n\nexport class TransformCacheCollection {\n  public readonly entrypoints: Map<string, Entrypoint | IEvaluatedEntrypoint>;\n\n  public readonly exports: Map<string, string[]>;\n\n  private contentHashes = new Map<string, string>();\n\n  constructor(caches: Partial<ICaches> = {}) {\n    console.log(\"cache.ts - TransformCacheCollection - constructor\");\n    this.entrypoints = caches.entrypoints || new Map();\n    this.exports = caches.exports || new Map();\n  }\n\n  public add<\n    TCache extends CacheNames,\n    TValue extends MapValue<ICaches[TCache]>,\n  >(cacheName: TCache, key: string, value: TValue): void {\n    console.log(\"cache.ts - add\");\n    const cache = this[cacheName] as Map<string, TValue>;\n    loggers[cacheName]('%s:add %s %f', getFileIdx(key), key, () => {\n      if (!cache.has(key)) {\n        return 'added';\n      }\n\n      return cache.get(key) === value ? 'unchanged' : 'updated';\n    });\n\n    cache.set(key, value);\n  }\n\n  public clear(cacheName: CacheNames | 'all'): void {\n    console.log(\"cache.ts - clear\");\n    if (cacheName === 'all') {\n      cacheNames.forEach((name) => {\n        this.clear(name);\n      });\n\n      return;\n    }\n\n    loggers[cacheName]('clear');\n    const cache = this[cacheName] as Map<string, unknown>;\n\n    cache.clear();\n  }\n\n  public delete(cacheName: CacheNames, key: string): void {\n    console.log(\"cache.ts - delete\");\n    this.invalidate(cacheName, key);\n  }\n\n  public get<\n    TCache extends CacheNames,\n    TValue extends MapValue<ICaches[TCache]>,\n  >(cacheName: TCache, key: string): TValue | undefined {\n    console.log(\"cache.ts - get\");\n    const cache = this[cacheName] as Map<string, TValue>;\n\n    const res = cache.get(key);\n    loggers[cacheName]('get', key, res === undefined ? 'miss' : 'hit');\n    return res;\n  }\n\n  public has(cacheName: CacheNames, key: string): boolean {\n    console.log(\"cache.ts - has\");\n    const cache = this[cacheName] as Map<string, unknown>;\n\n    const res = cache.has(key);\n    loggers[cacheName]('has', key, res);\n    return res;\n  }\n\n  public invalidate(cacheName: CacheNames, key: string): void {\n    console.log(\"cache.ts - invalidate\");\n    const cache = this[cacheName] as Map<string, unknown>;\n    if (!cache.has(key)) {\n      return;\n    }\n\n    loggers[cacheName]('invalidate', key);\n\n    cache.delete(key);\n  }\n\n  public invalidateForFile(filename: string) {\n    console.log(\"cache.ts - invalidateForFile\");\n    cacheNames.forEach((cacheName) => {\n      this.invalidate(cacheName, filename);\n    });\n  }\n\n  public invalidateIfChanged(filename: string, content: string) {\n    console.log(\"cache.ts - invalidateIfChanged\");\n    const hash = this.contentHashes.get(filename);\n    const newHash = hashContent(content);\n\n    if (hash !== newHash) {\n      cacheLogger('content has changed, invalidate all for %s', filename);\n      this.contentHashes.set(filename, newHash);\n      this.invalidateForFile(filename);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n"],"mappings":"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","ignoreList":[]}