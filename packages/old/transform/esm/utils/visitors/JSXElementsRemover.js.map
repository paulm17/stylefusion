{"version":3,"file":"JSXElementsRemover.js","names":["types","t","getScope","mutate","getFunctionName","path","console","log","isClassMethod","isIdentifier","node","key","name","JSXElementsRemover","nullLiteral","functionScope","getFunctionParent","scopePath","isFunction","emptyBody","blockStatement","returnStatement","decl","findParent","p","isClassDeclaration","replaceWith","functionDeclaration","id","body","get","Array","isArray","Error","params"],"sources":["../../../src/utils/visitors/JSXElementsRemover.ts"],"sourcesContent":["import { types as t } from '@babel/core';\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  CallExpression,\n  Function as FunctionNode,\n  JSX,\n} from '@babel/types';\n\nimport { getScope } from '../getScope';\nimport { mutate } from '../scopeHelpers';\n\nfunction getFunctionName(path: NodePath<FunctionNode>): string | null {\n  console.log(\"JSXElementsRemover - getFunctionName\");\n  if (path.isClassMethod() && t.isIdentifier(path.node.key)) {\n    return path.node.key.name;\n  }\n\n  return null;\n}\n\nexport function JSXElementsRemover(path: NodePath<JSX | CallExpression>) {\n  console.log(\"JSXElementsRemover - JSXElementsRemover\");\n  // JSX can be safely replaced with null because it is unnecessary for styles\n  const nullLiteral = t.nullLiteral();\n\n  // We can do even more\n  // If that JSX is a result of a function, we can replace the function body.\n  const functionScope = getScope(path).getFunctionParent();\n  const scopePath = functionScope?.path;\n  if (scopePath?.isFunction()) {\n    const emptyBody = t.blockStatement([t.returnStatement(nullLiteral)]);\n\n    // Is it not just a function, but a method `render`?\n    if (getFunctionName(scopePath) === 'render') {\n      const decl = scopePath.findParent((p) => p.isClassDeclaration());\n\n      // Replace the whole component\n      if (decl?.isClassDeclaration()) {\n        mutate(decl, (p) => {\n          p.replaceWith(t.functionDeclaration(decl.node.id, [], emptyBody));\n        });\n\n        return;\n      }\n    }\n\n    const body = scopePath.get('body');\n    if (Array.isArray(body)) {\n      throw new Error(\n        \"A body of a function is expected to be a single element but an array was returned. It's possible if JS syntax has been changed since that code was written.\"\n      );\n    }\n\n    const node: typeof scopePath.node = {\n      ...scopePath.node,\n      body: emptyBody,\n      params: [],\n    };\n\n    mutate(scopePath, (p) => {\n      p.replaceWith(node);\n    });\n  } else {\n    mutate(path, (p) => {\n      p.replaceWith(nullLiteral);\n    });\n  }\n}\n"],"mappings":"AAAA,SAASA,KAAK,IAAIC,CAAC,QAAQ,aAAa;AAQxC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,MAAM,QAAQ,iBAAiB;AAExC,SAASC,eAAeA,CAACC,IAA4B,EAAiB;EACpEC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACnD,IAAIF,IAAI,CAACG,aAAa,CAAC,CAAC,IAAIP,CAAC,CAACQ,YAAY,CAACJ,IAAI,CAACK,IAAI,CAACC,GAAG,CAAC,EAAE;IACzD,OAAON,IAAI,CAACK,IAAI,CAACC,GAAG,CAACC,IAAI;EAC3B;EAEA,OAAO,IAAI;AACb;AAEA,OAAO,SAASC,kBAAkBA,CAACR,IAAoC,EAAE;EACvEC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACtD;EACA,MAAMO,WAAW,GAAGb,CAAC,CAACa,WAAW,CAAC,CAAC;;EAEnC;EACA;EACA,MAAMC,aAAa,GAAGb,QAAQ,CAACG,IAAI,CAAC,CAACW,iBAAiB,CAAC,CAAC;EACxD,MAAMC,SAAS,GAAGF,aAAa,EAAEV,IAAI;EACrC,IAAIY,SAAS,EAAEC,UAAU,CAAC,CAAC,EAAE;IAC3B,MAAMC,SAAS,GAAGlB,CAAC,CAACmB,cAAc,CAAC,CAACnB,CAAC,CAACoB,eAAe,CAACP,WAAW,CAAC,CAAC,CAAC;;IAEpE;IACA,IAAIV,eAAe,CAACa,SAAS,CAAC,KAAK,QAAQ,EAAE;MAC3C,MAAMK,IAAI,GAAGL,SAAS,CAACM,UAAU,CAAEC,CAAC,IAAKA,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;;MAEhE;MACA,IAAIH,IAAI,EAAEG,kBAAkB,CAAC,CAAC,EAAE;QAC9BtB,MAAM,CAACmB,IAAI,EAAGE,CAAC,IAAK;UAClBA,CAAC,CAACE,WAAW,CAACzB,CAAC,CAAC0B,mBAAmB,CAACL,IAAI,CAACZ,IAAI,CAACkB,EAAE,EAAE,EAAE,EAAET,SAAS,CAAC,CAAC;QACnE,CAAC,CAAC;QAEF;MACF;IACF;IAEA,MAAMU,IAAI,GAAGZ,SAAS,CAACa,GAAG,CAAC,MAAM,CAAC;IAClC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MACvB,MAAM,IAAII,KAAK,CACb,6JACF,CAAC;IACH;IAEA,MAAMvB,IAA2B,GAAG;MAClC,GAAGO,SAAS,CAACP,IAAI;MACjBmB,IAAI,EAAEV,SAAS;MACfe,MAAM,EAAE;IACV,CAAC;IAED/B,MAAM,CAACc,SAAS,EAAGO,CAAC,IAAK;MACvBA,CAAC,CAACE,WAAW,CAAChB,IAAI,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLP,MAAM,CAACE,IAAI,EAAGmB,CAAC,IAAK;MAClBA,CAAC,CAACE,WAAW,CAACZ,WAAW,CAAC;IAC5B,CAAC,CAAC;EACJ;AACF","ignoreList":[]}