{"version":3,"file":"getTagProcessor.js","names":["readFileSync","basename","dirname","join","types","t","addDefault","addNamed","BaseProcessor","findPackageJSON","collectExportsAndImports","explicitImport","collectTemplateDependencies","extractExpression","getSource","isNotNull","mutate","getTraversalCache","last","arr","length","zip","arr1","arr2","result","i","push","buildCodeFrameError","path","message","console","log","Error","definedTagsCache","Map","getDefinedTagsFromPackage","pkgName","filename","has","get","packageJSONPath","undefined","packageDir","packageJSON","JSON","parse","definedTags","tags","normalizedTags","Object","entries","reduce","acc","key","value","startsWith","require","resolve","paths","set","isValidProcessorClass","module","constructor","getProcessorFromPackage","packageName","tagName","processorPath","Processor","default","getProcessorFromFile","getProcessorForImport","imported","source","options","tagResolver","customFile","processor","getBuilderForIdentifier","definedProcessor","imports","tagSource","tagPath","parentPath","isMemberExpression","property","node","params","prev","current","isSequenceExpression","expressions","isCallExpression","callee","args","cookedArgs","map","arg","buildError","bind","isExpression","type","extracted","evaluate","filter","object","isIdentifier","computed","name","isStringLiteral","isTaggedTemplateExpression","tag","quasis","expressionValues","replacer","replacement","isPure","p","replaceWith","addComment","importHelpers","addDefaultImport","importedSource","nameHint","addNamedImport","astService","Proxy","target","prop","receiver","Reflect","loc","getDisplayName","idx","displayName","parent","findParent","isObjectProperty","isJSXOpeningElement","isVariableDeclarator","toString","keyPath","isJSXIdentifier","id","test","replace","isTagReferenced","isReferenced","referencePaths","scope","getBinding","counters","WeakMap","getNextIndex","state","counter","getDefinedProcessors","cache","defined","forEach","local","createProcessorInstance","fileContext","builder","e","SKIP","applyProcessors","callback","definedProcessors","usages","idName","includes","split","objBinding","identifier","sort","a","b","start","usage","instance"],"sources":["../../src/utils/getTagProcessor.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { basename, dirname, join } from 'path';\n\nimport { types as t } from '@babel/core';\nimport { addDefault, addNamed } from '@babel/helper-module-imports';\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  Expression,\n  Identifier,\n  MemberExpression,\n  Program,\n  SourceLocation,\n} from '@babel/types';\n\nimport { BaseProcessor } from '@wyw-in-js/processor-utils';\nimport type {\n  Param,\n  Params,\n  IFileContext,\n  TagSource,\n} from '@wyw-in-js/processor-utils';\nimport { findPackageJSON } from '@wyw-in-js/shared';\nimport type { ExpressionValue, StrictOptions } from '@wyw-in-js/shared';\n\nimport type { IImport } from './collectExportsAndImports';\nimport {\n  collectExportsAndImports,\n  explicitImport,\n} from './collectExportsAndImports';\nimport {\n  collectTemplateDependencies,\n  extractExpression,\n} from './collectTemplateDependencies';\nimport { getSource } from './getSource';\nimport { isNotNull } from './isNotNull';\nimport { mutate } from './scopeHelpers';\nimport { getTraversalCache } from './traversalCache';\n\ntype BuilderArgs = ConstructorParameters<typeof BaseProcessor> extends [\n  Params,\n  TagSource,\n  typeof t,\n  SourceLocation | null,\n  (replacement: Expression, isPure: boolean) => void,\n  ...infer T,\n]\n  ? T\n  : never;\n\ntype Builder = (...args: BuilderArgs) => BaseProcessor;\n\ntype DefinedProcessor = [ProcessorClass, TagSource];\ntype DefinedProcessors = Map<string, DefinedProcessor>;\n\nexport type ProcessorClass = new (\n  ...args: ConstructorParameters<typeof BaseProcessor>\n) => BaseProcessor;\n\nconst last = <T>(arr: T[]): T | undefined => arr[arr.length - 1];\n\nfunction zip<T1, T2>(arr1: T1[], arr2: T2[]) {\n  const result: (T1 | T2)[] = [];\n  for (let i = 0; i < arr1.length; i++) {\n    result.push(arr1[i]);\n    if (arr2[i]) result.push(arr2[i]);\n  }\n\n  return result;\n}\n\nfunction buildCodeFrameError(path: NodePath, message: string): Error {\n  console.log(\"getTagProcessor - buildCodeFrameError\");\n  try {\n    return path.buildCodeFrameError(message);\n  } catch {\n    return new Error(message);\n  }\n}\n\nconst definedTagsCache = new Map<string, Record<string, string> | undefined>();\nconst getDefinedTagsFromPackage = (\n  pkgName: string,\n  filename: string | null | undefined\n): Record<string, string> | undefined => {\n  console.log(\"getTagProcessor - getDefinedTagsFromPackage\");\n  if (definedTagsCache.has(pkgName)) {\n    return definedTagsCache.get(pkgName);\n  }\n\n  const packageJSONPath = findPackageJSON(pkgName, filename);\n  if (!packageJSONPath) {\n    return undefined;\n  }\n\n  const packageDir = dirname(packageJSONPath);\n  const packageJSON = JSON.parse(readFileSync(packageJSONPath, 'utf8'));\n  const definedTags: Record<string, string> | undefined =\n    packageJSON['wyw-in-js']?.tags;\n\n  const normalizedTags = definedTags\n    ? Object.entries(definedTags).reduce(\n        (acc, [key, value]) => ({\n          ...acc,\n          [key]: value.startsWith('.')\n            ? join(packageDir, value)\n            : require.resolve(value, { paths: [packageDir] }),\n        }),\n        {} as Record<string, string>\n      )\n    : undefined;\n\n  definedTagsCache.set(pkgName, normalizedTags);\n\n  return normalizedTags;\n};\n\nfunction isValidProcessorClass(module: unknown): module is ProcessorClass {\n  console.log(\"getTagProcessor - isValidProcessorClass\");\n  return module instanceof BaseProcessor.constructor;\n}\n\nfunction getProcessorFromPackage(\n  packageName: string,\n  tagName: string,\n  filename: string | null | undefined\n): ProcessorClass | null {\n  console.log(\"getTagProcessor - getProcessorFromPackage\");\n  const definedTags = getDefinedTagsFromPackage(packageName, filename);\n  const processorPath = definedTags?.[tagName];\n  if (!processorPath) {\n    return null;\n  }\n\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorFromFile(processorPath: string): ProcessorClass | null {\n  console.log(\"getTagProcessor - getProcessorFromFile\");\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nexport function getProcessorForImport(\n  { imported, source }: IImport,\n  filename: string | null | undefined,\n  options: Pick<StrictOptions, 'tagResolver'>\n): [ProcessorClass | null, TagSource] {\n  console.log(\"getTagProcessor - getProcessorForImport\");\n  const tagResolver = options.tagResolver ?? (() => null);\n\n  const customFile = tagResolver(source, imported);\n  const processor = customFile\n    ? getProcessorFromFile(customFile)\n    : getProcessorFromPackage(source, imported, filename);\n  return [processor, { imported, source }];\n}\n\nfunction getBuilderForIdentifier(\n  definedProcessor: DefinedProcessor,\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  options: Pick<StrictOptions, 'evaluate'>\n): Builder | null {\n  console.log(\"getTagProcessor - getBuilderForIdentifier\");\n  const [Processor, tagSource] = definedProcessor;\n  let tagPath: NodePath<Identifier | MemberExpression> = path;\n  if (tagPath.parentPath?.isMemberExpression({ property: tagPath.node })) {\n    tagPath = tagPath.parentPath;\n  }\n\n  if (!Processor || !tagSource || !tagPath) {\n    return null;\n  }\n\n  const params: Param[] = [['callee', tagPath.node]];\n  let prev: NodePath = tagPath;\n  let current: NodePath | null = tagPath.parentPath;\n  while (current && current !== path) {\n    if (\n      current?.isSequenceExpression() &&\n      last(current.node.expressions) === prev.node\n    ) {\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isCallExpression({ callee: prev.node })) {\n      const args = current.get('arguments');\n      const cookedArgs = args\n        .map((arg) => {\n          const buildError = arg.buildCodeFrameError.bind(arg);\n          if (!arg.isExpression()) {\n            throw buildError(`Unexpected type of an argument ${arg.type}`);\n          }\n          const source = getSource(arg);\n          const extracted = extractExpression(arg, options.evaluate, imports);\n          return {\n            ...extracted,\n            source,\n            buildCodeFrameError: buildError,\n          } as ExpressionValue;\n        })\n        .filter(isNotNull);\n\n      params.push(['call', ...cookedArgs]);\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isMemberExpression({ object: prev.node })) {\n      const property = current.get('property');\n      if (property.isIdentifier() && !current.node.computed) {\n        params.push(['member', property.node.name]);\n      } else if (property.isStringLiteral()) {\n        params.push(['member', property.node.value]);\n      } else {\n        throw property.buildCodeFrameError(`Unexpected type of a property`);\n      }\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isTaggedTemplateExpression({ tag: prev.node })) {\n      const [quasis, expressionValues] = collectTemplateDependencies(\n        current,\n        options.evaluate\n      );\n      params.push(['template', zip(quasis, expressionValues)]);\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    break;\n  }\n\n  const replacer = (replacement: Expression, isPure: boolean) => {\n    mutate(prev, (p) => {\n      p.replaceWith(replacement);\n      if (isPure) {\n        p.addComment('leading', '#__PURE__');\n      }\n    });\n  };\n\n  const importHelpers = {\n    addDefaultImport: (importedSource: string, nameHint?: string) =>\n      addDefault(path, importedSource, { nameHint }),\n    addNamedImport: (\n      name: string,\n      importedSource: string,\n      nameHint: string = name\n    ) => addNamed(path, name, importedSource, { nameHint }),\n  };\n\n  type AstService = typeof t & typeof importHelpers;\n\n  const astService = new Proxy<AstService>(t as AstService, {\n    get(target, prop, receiver) {\n      if (prop in importHelpers) {\n        return importHelpers[prop as keyof typeof importHelpers];\n      }\n\n      return Reflect.get(target, prop, receiver);\n    },\n  });\n\n  return (...args: BuilderArgs) =>\n    new Processor(\n      params,\n      tagSource,\n      astService,\n      tagPath.node.loc ?? null,\n      replacer,\n      ...args\n    );\n}\n\nfunction getDisplayName(\n  path: NodePath<Identifier>,\n  idx: number,\n  filename?: string | null\n): string {\n  console.log(\"getTagProcessor - getDisplayName\");\n  let displayName: string | undefined;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isObjectProperty()) {\n      if ('name' in parent.node.key) {\n        displayName = parent.node.key.name;\n      } else if ('value' in parent.node.key) {\n        displayName = parent.node.key.value.toString();\n      } else {\n        const keyPath = parent.get('key');\n        displayName = getSource(keyPath);\n      }\n    } else if (parent.isJSXOpeningElement()) {\n      const name = parent.get('name');\n      if (name.isJSXIdentifier()) {\n        displayName = name.node.name;\n      }\n    } else if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      if (id.isIdentifier()) {\n        displayName = id.node.name;\n      }\n    }\n  }\n\n  if (!displayName) {\n    // Try to derive the path from the filename\n    displayName = basename(filename ?? 'unknown');\n\n    if (filename && /^index\\.[a-z\\d]+$/.test(displayName)) {\n      // If the file name is 'index', better to get name from parent folder\n      displayName = basename(dirname(filename));\n    }\n\n    // Remove the file extension\n    displayName = displayName.replace(/\\.[a-z\\d]+$/, '');\n\n    if (displayName) {\n      displayName += idx;\n    } else {\n      throw new Error(\n        \"Couldn't determine a name for the component. Ensure that it's either:\\n\" +\n          '- Assigned to a variable\\n' +\n          '- Is an object property\\n' +\n          '- Is a prop in a JSX element\\n'\n      );\n    }\n  }\n\n  return displayName;\n}\n\nfunction isTagReferenced(path: NodePath): boolean {\n  console.log(\"getTagProcessor - isTagReferenced\");\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  let isReferenced = true;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      // FIXME: replace with id.isReferencedIdentifier()\n      if (id.isIdentifier()) {\n        const { referencePaths } = path.scope.getBinding(id.node.name) || {\n          referencePaths: [],\n        };\n\n        isReferenced = referencePaths.length !== 0;\n      }\n    }\n  }\n\n  return isReferenced;\n}\n\nconst counters = new WeakMap<IFileContext, number>();\nconst getNextIndex = (state: IFileContext) => {\n  const counter = counters.get(state) ?? 0;\n  counters.set(state, counter + 1);\n  return counter;\n};\n\nexport function getDefinedProcessors(\n  imports: IImport[],\n  path: NodePath<Program>,\n  filename: string | null | undefined,\n  options: Pick<StrictOptions, 'tagResolver'>\n): DefinedProcessors {\n  console.log(\"getTagProcessor - getDefinedProcessors\");\n  const cache = getTraversalCache<DefinedProcessors, NodePath<Program>>(\n    path,\n    'getDefinedProcessors'\n  );\n\n  if (!cache.has(path)) {\n    const defined: DefinedProcessors = new Map();\n\n    imports.forEach((i) => {\n      const [processor, tagSource] = getProcessorForImport(\n        i,\n        filename,\n        options\n      );\n      const { local } = i;\n      if (!processor) {\n        return;\n      }\n\n      let name: string | null = null;\n      if (local.isIdentifier()) {\n        name = local.node.name;\n      }\n\n      if (name === null && local.isMemberExpression()) {\n        const property = local.get('property');\n        const object = local.get('object');\n        if (property.isIdentifier() && object.isIdentifier()) {\n          name = `${object.node.name}.${property.node.name}`;\n        }\n      }\n\n      if (name === null) {\n        return;\n      }\n\n      defined.set(name, [processor, tagSource]);\n    });\n\n    cache.set(path, defined);\n  }\n\n  return cache.get(path)!;\n}\n\nfunction createProcessorInstance(\n  definedProcessor: [ProcessorClass, TagSource],\n  imports: IImport[],\n  path: NodePath<Identifier>,\n  fileContext: IFileContext,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): BaseProcessor | null {\n  console.log(\"getTagProcessor - createProcessorInstance\");\n  const cache = getTraversalCache<BaseProcessor | null, Identifier>(\n    path,\n    'createProcessorInstance'\n  );\n\n  if (!cache.has(path.node)) {\n    try {\n      const builder = getBuilderForIdentifier(\n        definedProcessor,\n        path,\n        imports,\n        options\n      );\n      if (builder) {\n        // Increment the index of the style we're processing\n        // This is used for slug generation to prevent collision\n        // Also used for display name if it couldn't be determined\n        const idx = getNextIndex(fileContext);\n\n        const displayName = getDisplayName(path, idx, fileContext.filename);\n\n        const processor = builder(\n          displayName,\n          isTagReferenced(path),\n          idx,\n          options,\n          fileContext\n        );\n\n        cache.set(path.node, processor);\n      } else {\n        cache.set(path.node, null);\n      }\n    } catch (e) {\n      if (e === BaseProcessor.SKIP) {\n        cache.set(path.node, null);\n        return null;\n      }\n\n      if (e instanceof Error) {\n        throw buildCodeFrameError(path, e.message);\n      }\n\n      throw e;\n    }\n  }\n\n  return cache.get(path.node) ?? null;\n}\n\nexport function applyProcessors(\n  path: NodePath<Program>,\n  fileContext: IFileContext,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >,\n  callback: (processor: BaseProcessor) => void\n) {\n  console.log(\"getTagProcessor - applyProcessors\");\n  const imports = collectExportsAndImports(path).imports.filter(explicitImport);\n\n  const definedProcessors = getDefinedProcessors(\n    imports,\n    path,\n    fileContext.filename,\n    options\n  );\n\n  const usages: {\n    identifier: NodePath<Identifier>;\n    processor: DefinedProcessor;\n  }[] = [];\n\n  definedProcessors.forEach((processor, idName) => {\n    if (idName.includes('.')) {\n      // It's a member expression\n      const [object, property] = idName.split('.');\n      const objBinding = path.scope.getBinding(object);\n      if (!objBinding) {\n        return;\n      }\n\n      objBinding.referencePaths.forEach((p) => {\n        const parent = p.parentPath;\n        if (!parent?.isMemberExpression()) {\n          return;\n        }\n\n        const identifier = parent.get('property');\n        if (identifier.isIdentifier({ name: property })) {\n          usages.push({\n            identifier,\n            processor,\n          });\n        }\n      });\n\n      return;\n    }\n\n    path.scope.getBinding(idName)?.referencePaths.forEach((identifier) => {\n      if (identifier.isIdentifier()) {\n        usages.push({\n          identifier,\n          processor,\n        });\n      }\n    });\n  });\n\n  // The same order, the same slugs\n  usages.sort(\n    (a, b) => (a.identifier.node.start ?? 0) - (b.identifier.node.start ?? 0)\n  );\n\n  usages.forEach((usage) => {\n    const definedProcessor = usage.processor;\n\n    if (!definedProcessor) {\n      return;\n    }\n\n    const instance = createProcessorInstance(\n      definedProcessor,\n      imports,\n      usage.identifier,\n      fileContext,\n      options\n    );\n\n    if (instance === null) {\n      return;\n    }\n\n    callback(instance);\n  });\n}\n"],"mappings":"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","ignoreList":[]}