{"version":3,"file":"isTypedNode.js","names":["isTypedNode","type","console","log","p"],"sources":["../../src/utils/isTypedNode.ts"],"sourcesContent":["import type { NodePath } from '@babel/traverse';\nimport type { Node } from '@babel/types';\n\nexport const isTypedNode: <T extends NodePath['type']>(\n  type: T\n) => (p: NodePath) => p is NodePath<\n  Extract<\n    Node,\n    {\n      type: T;\n    }\n  >\n> = <T extends NodePath['type']>(type: T) => {\n  console.log(\"isTypedNode - isTypedNode\");\n  return (p: NodePath): p is NodePath<Extract<Node, { type: T }>> => {\n    return p.type === type;\n  };\n};\n"],"mappings":"AAGA,OAAO,MAAMA,WASZ,GAAgCC,IAAO,IAAK;EAC3CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAQC,CAAW,IAAgD;IACjE,OAAOA,CAAC,CAACH,IAAI,KAAKA,IAAI;EACxB,CAAC;AACH,CAAC","ignoreList":[]}