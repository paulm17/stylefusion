{"version":3,"file":"extract.js","names":["SourceMapGenerator","createStylisPreprocessor","extractCssFromAst","rules","originalCode","options","console","log","mappings","cssText","preprocessor","selector","text","Object","keys","forEach","index","push","generated","line","column","original","start","name","source","atom","cssSourceMapText","length","generator","file","filename","replace","mapping","addMapping","setSourceContent","toString","extract","services","entrypoint","processors","data","loadedAndParsed","evaluator","Error","allRules","allReplacements","processor","artifacts","artifact","replacements","code"],"sources":["../../../src/transform/generators/extract.ts"],"sourcesContent":["import type { Mapping } from 'source-map';\nimport { SourceMapGenerator } from 'source-map';\n\nimport type { Replacements, Rules } from '@wyw-in-js/shared';\n\nimport type { Options, PreprocessorFn } from '../../types';\nimport type { IExtractAction, SyncScenarioForAction } from '../types';\nimport { createStylisPreprocessor } from './createStylisPreprocessor';\n\nfunction extractCssFromAst(\n  rules: Rules,\n  originalCode: string,\n  options: Pick<Options, 'preprocessor' | 'filename' | 'outputFilename'>\n): { cssSourceMapText: string; cssText: string; rules: Rules } {\n  console.log(\"transform - extractCssFromAst\");\n  const mappings: Mapping[] = [];\n\n  let cssText = '';\n\n  let preprocessor: PreprocessorFn;\n  if (typeof options.preprocessor === 'function') {\n    // eslint-disable-next-line prefer-destructuring\n    preprocessor = options.preprocessor;\n  } else {\n    switch (options.preprocessor) {\n      case 'none':\n        preprocessor = (selector, text) => `${selector} {${text}}\\n`;\n        break;\n      case 'stylis':\n      default:\n        preprocessor = createStylisPreprocessor(options);\n    }\n  }\n\n  Object.keys(rules).forEach((selector, index) => {\n    mappings.push({\n      generated: {\n        line: index + 1,\n        column: 0,\n      },\n      original: rules[selector].start!,\n      name: selector,\n      source: '',\n    });\n\n    if (rules[selector].atom) {\n      // For atoms, we just directly insert cssText, to give the atomizer full control over the rules\n      cssText += `${rules[selector].cssText}\\n`;\n    } else {\n      // Run each rule through stylis to support nesting\n      cssText += `${preprocessor(selector, rules[selector].cssText)}\\n`;\n    }\n  });\n\n  return {\n    cssText,\n    rules,\n\n    get cssSourceMapText() {\n      if (mappings?.length) {\n        const generator = new SourceMapGenerator({\n          file: options.filename.replace(/\\.js$/, '.css'),\n        });\n\n        mappings.forEach((mapping) =>\n          generator.addMapping({ ...mapping, source: options.filename })\n        );\n\n        generator.setSourceContent(options.filename, originalCode);\n\n        return generator.toString();\n      }\n\n      return '';\n    },\n  };\n}\n\n/**\n * Extract artifacts (e.g. CSS) from processors\n */\n// eslint-disable-next-line require-yield\nexport function* extract(\n  this: IExtractAction\n): SyncScenarioForAction<IExtractAction> {\n  console.log(\"transform - extract\");\n  const { options } = this.services;\n  const { entrypoint } = this;\n  const { processors } = this.data;\n  const { loadedAndParsed } = entrypoint;\n  if (loadedAndParsed.evaluator === 'ignored') {\n    throw new Error('entrypoint was ignored');\n  }\n\n  let allRules: Rules = {};\n  const allReplacements: Replacements = [];\n  processors.forEach((processor) => {\n    processor.artifacts.forEach((artifact) => {\n      if (artifact[0] !== 'css') return;\n      const [rules, replacements] = artifact[1] as [\n        rules: Rules,\n        sourceMapReplacements: Replacements,\n      ];\n\n      allRules = {\n        ...allRules,\n        ...rules,\n      };\n\n      allReplacements.push(...replacements);\n    });\n  });\n\n  return {\n    ...extractCssFromAst(allRules, loadedAndParsed.code, options),\n    replacements: allReplacements,\n  };\n}\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,YAAY;AAM/C,SAASC,wBAAwB,QAAQ,4BAA4B;AAErE,SAASC,iBAAiBA,CACxBC,KAAY,EACZC,YAAoB,EACpBC,OAAsE,EACT;EAC7DC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC5C,MAAMC,QAAmB,GAAG,EAAE;EAE9B,IAAIC,OAAO,GAAG,EAAE;EAEhB,IAAIC,YAA4B;EAChC,IAAI,OAAOL,OAAO,CAACK,YAAY,KAAK,UAAU,EAAE;IAC9C;IACAA,YAAY,GAAGL,OAAO,CAACK,YAAY;EACrC,CAAC,MAAM;IACL,QAAQL,OAAO,CAACK,YAAY;MAC1B,KAAK,MAAM;QACTA,YAAY,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAM,GAAED,QAAS,KAAIC,IAAK,KAAI;QAC5D;MACF,KAAK,QAAQ;MACb;QACEF,YAAY,GAAGT,wBAAwB,CAACI,OAAO,CAAC;IACpD;EACF;EAEAQ,MAAM,CAACC,IAAI,CAACX,KAAK,CAAC,CAACY,OAAO,CAAC,CAACJ,QAAQ,EAAEK,KAAK,KAAK;IAC9CR,QAAQ,CAACS,IAAI,CAAC;MACZC,SAAS,EAAE;QACTC,IAAI,EAAEH,KAAK,GAAG,CAAC;QACfI,MAAM,EAAE;MACV,CAAC;MACDC,QAAQ,EAAElB,KAAK,CAACQ,QAAQ,CAAC,CAACW,KAAM;MAChCC,IAAI,EAAEZ,QAAQ;MACda,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIrB,KAAK,CAACQ,QAAQ,CAAC,CAACc,IAAI,EAAE;MACxB;MACAhB,OAAO,IAAK,GAAEN,KAAK,CAACQ,QAAQ,CAAC,CAACF,OAAQ,IAAG;IAC3C,CAAC,MAAM;MACL;MACAA,OAAO,IAAK,GAAEC,YAAY,CAACC,QAAQ,EAAER,KAAK,CAACQ,QAAQ,CAAC,CAACF,OAAO,CAAE,IAAG;IACnE;EACF,CAAC,CAAC;EAEF,OAAO;IACLA,OAAO;IACPN,KAAK;IAEL,IAAIuB,gBAAgBA,CAAA,EAAG;MACrB,IAAIlB,QAAQ,EAAEmB,MAAM,EAAE;QACpB,MAAMC,SAAS,GAAG,IAAI5B,kBAAkB,CAAC;UACvC6B,IAAI,EAAExB,OAAO,CAACyB,QAAQ,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM;QAChD,CAAC,CAAC;QAEFvB,QAAQ,CAACO,OAAO,CAAEiB,OAAO,IACvBJ,SAAS,CAACK,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAER,MAAM,EAAEnB,OAAO,CAACyB;QAAS,CAAC,CAC/D,CAAC;QAEDF,SAAS,CAACM,gBAAgB,CAAC7B,OAAO,CAACyB,QAAQ,EAAE1B,YAAY,CAAC;QAE1D,OAAOwB,SAAS,CAACO,QAAQ,CAAC,CAAC;MAC7B;MAEA,OAAO,EAAE;IACX;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA,OAAO,UAAUC,OAAOA,CAAA,EAEiB;EACvC9B,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,MAAM;IAAEF;EAAQ,CAAC,GAAG,IAAI,CAACgC,QAAQ;EACjC,MAAM;IAAEC;EAAW,CAAC,GAAG,IAAI;EAC3B,MAAM;IAAEC;EAAW,CAAC,GAAG,IAAI,CAACC,IAAI;EAChC,MAAM;IAAEC;EAAgB,CAAC,GAAGH,UAAU;EACtC,IAAIG,eAAe,CAACC,SAAS,KAAK,SAAS,EAAE;IAC3C,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,IAAIC,QAAe,GAAG,CAAC,CAAC;EACxB,MAAMC,eAA6B,GAAG,EAAE;EACxCN,UAAU,CAACxB,OAAO,CAAE+B,SAAS,IAAK;IAChCA,SAAS,CAACC,SAAS,CAAChC,OAAO,CAAEiC,QAAQ,IAAK;MACxC,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MAC3B,MAAM,CAAC7C,KAAK,EAAE8C,YAAY,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAGvC;MAEDJ,QAAQ,GAAG;QACT,GAAGA,QAAQ;QACX,GAAGzC;MACL,CAAC;MAED0C,eAAe,CAAC5B,IAAI,CAAC,GAAGgC,YAAY,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAO;IACL,GAAG/C,iBAAiB,CAAC0C,QAAQ,EAAEH,eAAe,CAACS,IAAI,EAAE7C,OAAO,CAAC;IAC7D4C,YAAY,EAAEJ;EAChB,CAAC;AACH","ignoreList":[]}