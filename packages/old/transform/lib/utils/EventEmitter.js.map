{"version":3,"file":"EventEmitter.js","names":["isOnActionStartArgs","args","exports","isOnActionFinishArgs","EventEmitter","dummy","constructor","onEvent","onAction","onEntrypointEvent","action","actonType","idx","entrypointRef","fn","id","performance","now","result","Promise","then","e","entrypointEvent","sequenceId","event","perf","method","labels","single","datetime","Date"],"sources":["../../src/utils/EventEmitter.ts"],"sourcesContent":["export type OnEvent = (\n  labels: Record<string, unknown>,\n  type: 'start' | 'finish' | 'single',\n  event?: unknown\n) => void;\n\nexport interface IActionCreated {\n  actionIdx: string;\n  actionType: string;\n  type: 'actionCreated';\n}\n\nexport interface ICreatedEvent {\n  class: string;\n  evaluatedOnly: string[];\n  filename: string;\n  generation: number;\n  idx: string;\n  isExportsInherited: boolean;\n  only: string[];\n  parentId: number | null;\n  type: 'created';\n}\n\nexport interface ISupersededEvent {\n  type: 'superseded';\n  with: number;\n}\n\nexport interface ISetTransformResultEvent {\n  isNull: boolean;\n  type: 'setTransformResult';\n}\n\nexport type EntrypointEvent =\n  | IActionCreated\n  | ICreatedEvent\n  | ISupersededEvent\n  | ISetTransformResultEvent;\n\nexport type OnEntrypointEvent = (\n  idx: number,\n  timestamp: number,\n  event: EntrypointEvent\n) => void;\n\nexport type OnActionStartArgs = [\n  phase: 'start',\n  timestamp: number,\n  type: string,\n  idx: string,\n  entrypointRef: string,\n];\n\nexport type OnActionFinishArgs = [\n  phase: 'finish' | 'fail',\n  timestamp: number,\n  id: number,\n  isAsync: boolean,\n  error?: unknown,\n];\n\nexport const isOnActionStartArgs = (\n  args: OnActionStartArgs | OnActionFinishArgs\n): args is OnActionStartArgs => {\n  return args[0] === 'start';\n};\n\nexport const isOnActionFinishArgs = (\n  args: OnActionStartArgs | OnActionFinishArgs\n): args is OnActionFinishArgs => {\n  return args[0] === 'finish' || args[0] === 'fail';\n};\n\nexport interface OnAction {\n  (...args: OnActionStartArgs): number;\n  (...args: OnActionFinishArgs): void;\n}\n\nexport class EventEmitter {\n  static dummy = new EventEmitter(\n    () => {},\n    () => 0,\n    () => {}\n  );\n\n  constructor(\n    protected onEvent: OnEvent,\n    protected onAction: OnAction,\n    protected onEntrypointEvent: OnEntrypointEvent\n  ) {}\n\n  public action<TRes>(\n    actonType: string,\n    idx: string,\n    entrypointRef: string,\n    fn: () => TRes\n  ) {\n    const id = this.onAction(\n      'start',\n      performance.now(),\n      actonType,\n      idx,\n      entrypointRef\n    );\n\n    try {\n      const result = fn();\n      if (result instanceof Promise) {\n        result.then(\n          () => this.onAction('finish', performance.now(), id, true),\n          (e) => this.onAction('fail', performance.now(), id, true, e)\n        );\n      } else {\n        this.onAction('finish', performance.now(), id, false);\n      }\n\n      return result;\n    } catch (e) {\n      this.onAction('fail', performance.now(), id, false, e);\n      throw e;\n    }\n  }\n\n  public entrypointEvent(sequenceId: number, event: EntrypointEvent) {\n    this.onEntrypointEvent(sequenceId, performance.now(), event);\n  }\n\n  public perf<TRes>(method: string, fn: () => TRes): TRes {\n    const labels = { method };\n\n    this.onEvent(labels, 'start');\n\n    const result = fn();\n    if (result instanceof Promise) {\n      result.then(\n        () => this.onEvent(labels, 'finish'),\n        () => this.onEvent(labels, 'finish')\n      );\n    } else {\n      this.onEvent(labels, 'finish');\n    }\n\n    return result;\n  }\n\n  public single(labels: Record<string, unknown>) {\n    this.onEvent(\n      {\n        ...labels,\n        datetime: new Date(),\n      },\n      'single'\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}