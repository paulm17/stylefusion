{"version":3,"file":"processEntrypoint.js","names":["_AbortError","require","_usingCtx2","r","SuppressedError","n","e","Error","name","suppressed","error","using","Object","TypeError","o","Symbol","asyncDispose","for","dispose","push","v","d","a","u","bind","next","pop","t","call","Promise","resolve","then","err","processEntrypoint","only","log","entrypoint","_usingCtx","abortSignal","createAbortSignal","undefined","result","getNext","assertNotSuperseded","setTransformResult","_","isAborted","supersededWith"],"sources":["../../../src/transform/generators/processEntrypoint.ts"],"sourcesContent":["import { isAborted } from '../actions/AbortError';\nimport type { IProcessEntrypointAction, SyncScenarioForAction } from '../types';\n\n/**\n * The first stage of processing an entrypoint.\n * This stage is responsible for:\n * - scheduling the explodeReexports action\n * - scheduling the transform action\n * - rescheduling itself if the entrypoint is superseded\n */\nexport function* processEntrypoint(\n  this: IProcessEntrypointAction\n): SyncScenarioForAction<IProcessEntrypointAction> {\n  const { only, log } = this.entrypoint;\n  log('start processing (only: %o)', only);\n\n  try {\n    using abortSignal = this.createAbortSignal();\n\n    yield ['explodeReexports', this.entrypoint, undefined, abortSignal];\n    const result = yield* this.getNext(\n      'transform',\n      this.entrypoint,\n      undefined,\n      abortSignal\n    );\n\n    this.entrypoint.assertNotSuperseded();\n\n    this.entrypoint.setTransformResult(result);\n\n    log('entrypoint processing finished');\n  } catch (e) {\n    if (isAborted(e) && this.entrypoint.supersededWith) {\n      log('processing aborted, schedule the next attempt');\n      yield* this.getNext(\n        'processEntrypoint',\n        this.entrypoint.supersededWith,\n        undefined,\n        null\n      );\n\n      return;\n    }\n\n    log(`Unhandled error: %O`, e);\n    throw e;\n  }\n}\n"],"mappings":"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","ignoreList":[]}