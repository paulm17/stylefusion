{"version":3,"file":"Entrypoint.types.js","names":[],"sources":["../../src/transform/Entrypoint.types.ts"],"sourcesContent":["import type { TransformOptions } from '@babel/core';\nimport type { File } from '@babel/types';\n\nimport type { Debugger, Evaluator } from '@wyw-in-js/shared';\n\nimport type { Services } from './types';\n\nexport interface IEntrypointCode {\n  readonly ast: File;\n  code: string;\n  evalConfig: TransformOptions;\n  evaluator: Evaluator;\n}\n\nexport interface IIgnoredEntrypoint {\n  readonly ast?: File;\n  readonly code?: string;\n  evaluator: 'ignored';\n  reason: 'extension' | 'rule';\n}\n\nexport interface IEntrypointDependency {\n  only: string[];\n  resolved: string | null;\n  source: string;\n}\n\nexport type LoadAndParseFn = (\n  services: Services,\n  name: string,\n  loadedCode: string | undefined,\n  log: Debugger\n) => IEntrypointCode | IIgnoredEntrypoint;\n"],"mappings":"","ignoreList":[]}