{"version":3,"file":"BaseAction.js","names":["require","_types","actionIdx","BaseAction","result","Pending","activeScenario","activeScenarioNextResults","constructor","type","services","entrypoint","data","abortSignal","idx","toString","padStart","log","extend","ref","createAbortSignal","abortController","AbortController","unsubscribeFromParentAbort","onAbort","abort","unsubscribeFromSupersede","onSupersede","signal","Symbol","dispose","getNext","fn","_this$abortSignal","addEventListener","_this$abortSignal2","removeEventListener","run","handler","call","nextIdx","throwFn","e","emitAction","throw","nextFn","arg","next","processNextResult","onError","then","r","done","value","push","processError","length","nextResult","errorInGenerator","recover","activeScenarioError","processNext","rethrowActiveScenarioError","yieldIdx","eventEmitter","action","exports"],"sources":["../../../src/transform/actions/BaseAction.ts"],"sourcesContent":["/* eslint-disable no-plusplus */\nimport '../../utils/dispose-polyfill';\nimport type { Debugger } from '@wyw-in-js/shared';\n\nimport type { Entrypoint } from '../Entrypoint';\nimport type {\n  ActionQueueItem,\n  ActionTypes,\n  AnyIteratorResult,\n  AsyncScenarioForAction,\n  Handler,\n  IBaseAction,\n  Services,\n  SyncScenarioForAction,\n  TypeOfResult,\n  YieldResult,\n} from '../types';\nimport { Pending } from '../types';\n\nlet actionIdx = 0;\n\nexport type ActionByType<TType extends ActionTypes> = Extract<\n  ActionQueueItem,\n  {\n    type: TType;\n  }\n>;\n\ntype GetBase<TAction extends ActionQueueItem> = IBaseAction<\n  TAction,\n  TypeOfResult<TAction>,\n  TAction['data']\n>;\n\nexport class BaseAction<TAction extends ActionQueueItem>\n  implements GetBase<TAction>\n{\n  public readonly idx: string;\n\n  public result: TypeOfResult<TAction> | typeof Pending = Pending;\n\n  private activeScenario:\n    | SyncScenarioForAction<TAction>\n    | AsyncScenarioForAction<TAction>\n    | null = null;\n\n  private activeScenarioError?: unknown;\n\n  private activeScenarioNextResults: AnyIteratorResult<\n    'async' | 'sync',\n    TypeOfResult<TAction>\n  >[] = [];\n\n  public constructor(\n    public readonly type: TAction['type'],\n    public readonly services: Services,\n    public readonly entrypoint: Entrypoint,\n    public readonly data: TAction['data'],\n    public readonly abortSignal: AbortSignal | null\n  ) {\n    actionIdx += 1;\n    this.idx = actionIdx.toString(16).padStart(6, '0');\n  }\n\n  public get log(): Debugger {\n    return this.entrypoint.log.extend(this.ref);\n  }\n\n  public get ref() {\n    return `${this.type}@${this.idx}`;\n  }\n\n  public createAbortSignal(): AbortSignal & Disposable {\n    const abortController = new AbortController();\n\n    const unsubscribeFromParentAbort = this.onAbort(() => {\n      this.entrypoint.log('parent aborted');\n      abortController.abort();\n    });\n\n    const unsubscribeFromSupersede = this.entrypoint.onSupersede(() => {\n      this.entrypoint.log('entrypoint superseded, aborting processing');\n      abortController.abort();\n    });\n\n    const abortSignal = abortController.signal as AbortSignal & Disposable;\n    abortSignal[Symbol.dispose] = () => {\n      unsubscribeFromParentAbort();\n      unsubscribeFromSupersede();\n    };\n\n    return abortSignal;\n  }\n\n  public *getNext<\n    TNextType extends ActionTypes,\n    TNextAction extends ActionByType<TNextType> = ActionByType<TNextType>,\n  >(\n    type: TNextType,\n    entrypoint: Entrypoint,\n    data: TNextAction['data'],\n    abortSignal: AbortSignal | null = this.abortSignal\n  ): Generator<\n    [TNextType, Entrypoint, TNextAction['data'], AbortSignal | null],\n    TypeOfResult<TNextAction>,\n    YieldResult\n  > {\n    return (yield [\n      type,\n      entrypoint,\n      data,\n      abortSignal,\n    ]) as TypeOfResult<TNextAction>;\n  }\n\n  public onAbort(fn: () => void): () => void {\n    this.abortSignal?.addEventListener('abort', fn);\n\n    return () => {\n      this.abortSignal?.removeEventListener('abort', fn);\n    };\n  }\n\n  public run<\n    TMode extends 'async' | 'sync',\n    THandler extends Handler<TMode, TAction> = Handler<TMode, TAction>,\n  >(handler: THandler) {\n    type IterationResult = AnyIteratorResult<TMode, TypeOfResult<TAction>>;\n\n    if (!this.activeScenario) {\n      this.activeScenario = handler.call(this);\n      this.activeScenarioNextResults = [];\n    }\n\n    let nextIdx = 0;\n\n    const throwFn = (e: unknown) =>\n      this.emitAction(nextIdx, () => this.activeScenario!.throw(e));\n\n    const nextFn = (arg: YieldResult) =>\n      this.emitAction(nextIdx, () => this.activeScenario!.next(arg));\n\n    const processNextResult = (\n      result: IterationResult,\n      onError?: (e: unknown) => void\n    ) => {\n      if ('then' in result) {\n        result.then((r) => {\n          if (r.done) {\n            this.result = r.value;\n          }\n        }, onError);\n      } else if (result.done) {\n        this.result = result.value;\n      }\n\n      this.activeScenarioNextResults.push(result);\n    };\n\n    const processError = (e: unknown) => {\n      if (this.activeScenarioNextResults.length > nextIdx) {\n        this.log(\n          'error was already handled in another branch, result idx is %d',\n          nextIdx\n        );\n        return;\n      }\n\n      this.log('error processing, result idx is %d', nextIdx);\n\n      try {\n        const nextResult = throwFn(e);\n        processNextResult(nextResult as IterationResult, processError);\n      } catch (errorInGenerator) {\n        const { recover } = handler;\n        if (recover) {\n          const nextResult = {\n            done: false,\n            value: recover(errorInGenerator, this),\n          };\n\n          processNextResult(nextResult as IterationResult, processError);\n          return;\n        }\n\n        this.activeScenarioError = errorInGenerator;\n        throw errorInGenerator;\n      }\n    };\n\n    const processNext = (arg: YieldResult) => {\n      if (this.activeScenarioNextResults.length > nextIdx) {\n        this.log(\n          'next was already handled in another branch, result idx is %d',\n          nextIdx\n        );\n        return;\n      }\n\n      this.log('next processing, result idx is %d', nextIdx);\n\n      try {\n        const nextResult = nextFn(arg);\n        processNextResult(nextResult as IterationResult, processError);\n      } catch (e) {\n        processError(e);\n      }\n    };\n\n    return {\n      next: (arg: YieldResult): IterationResult => {\n        this.rethrowActiveScenarioError();\n        processNext(arg);\n        return this.activeScenarioNextResults[nextIdx++] as IterationResult;\n      },\n      throw: (e: unknown): IterationResult => {\n        this.rethrowActiveScenarioError();\n        processError(e);\n        return this.activeScenarioNextResults[nextIdx++] as IterationResult;\n      },\n    };\n  }\n\n  protected emitAction<TRes>(yieldIdx: number, fn: () => TRes) {\n    return this.services.eventEmitter.action(\n      this.type,\n      `${this.idx}:${yieldIdx + 1}`,\n      this.entrypoint.ref,\n      fn\n    );\n  }\n\n  private rethrowActiveScenarioError() {\n    if (!this.activeScenarioError) {\n      return;\n    }\n\n    this.log(\n      'scenario has an unhandled error from another branch, rethrow %o',\n      this.activeScenarioError\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-throw-literal\n    throw this.activeScenarioError;\n  }\n}\n"],"mappings":"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","ignoreList":[]}